{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Faiyaz\\\\Desktop\\\\ffu\\\\FYP-21\\\\football-tournaments\\\\client-side\\\\src\\\\pages\\\\tournament.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport TournamentDetails from '../components/tournament/TournamentDetails';\nimport StaticProfile from '../components/profile/StaticProfile';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { connect } from 'react-redux';\nimport { getUserData, getTournament } from '../redux/actions/dataActions'; // MUI stuffs\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'; // test\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nconst styles = {\n  image: {\n    width: 120,\n    objectFit: 'cover',\n    maxWidth: '100%',\n    borderRadius: '50%'\n  },\n  typography: {\n    flexGrow: 1,\n    align: \"center\"\n  }\n};\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}\n\n_c = TabPanel;\n\nclass tournament extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profile: null\n    };\n  }\n\n  componentDidMount() {\n    const tournamentId = this.props.match.params.tournamentId;\n    console.log(\"TEST \" + tournamentId);\n    this.props.getTournament(tournamentId); // axios.get(`/tournament/${tournamentId}`)\n    //      .then(res => {\n    //          this.setState({\n    //              profile: res.data.user\n    //          })\n    //      })\n    //     .catch(err => console.log(err));\n  }\n\n  render() {\n    const {\n      tournament\n    } = this.props.data;\n    const {\n      classes\n    } = this.props;\n    console.log(\"TOURN? \" + tournament);\n    const [value, setValue] = useState(0);\n\n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 0,\n      direction: \"row\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 2,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: tournament.userImage,\n          height: true,\n          className: classes.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 10,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          color: \"primary\",\n          className: classes.typography,\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: tournament.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 93\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(AppBar, {\n              position: \"static\",\n              children: /*#__PURE__*/_jsxDEV(Tabs, {\n                value: value,\n                onChange: handleChange,\n                \"aria-label\": \"simple tabs example\",\n                children: [/*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"Item One\",\n                  ...a11yProps(0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"Item Two\",\n                  ...a11yProps(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"Item Three\",\n                  ...a11yProps(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              value: value,\n              index: 0,\n              children: \"Item One\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              value: value,\n              index: 1,\n              children: \"Item Two\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              value: value,\n              index: 2,\n              children: \"Item Three\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\ntournament.protoTypes = {\n  getUserData: PropTypes.func.isRequired,\n  getTournament: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getUserData,\n  getTournament\n})(withStyles(styles)(tournament));\n\nvar _c;\n\n$RefreshReg$(_c, \"TabPanel\");","map":{"version":3,"sources":["C:/Users/Faiyaz/Desktop/ffu/FYP-21/football-tournaments/client-side/src/pages/tournament.js"],"names":["React","Component","PropTypes","axios","TournamentDetails","StaticProfile","withStyles","connect","getUserData","getTournament","Card","CardContent","CardMedia","Typography","Grid","AppBar","Tabs","Tab","Box","styles","image","width","objectFit","maxWidth","borderRadius","typography","flexGrow","align","TabPanel","props","children","value","index","other","tournament","state","profile","componentDidMount","tournamentId","match","params","console","log","render","data","classes","setValue","useState","handleChange","event","newValue","userImage","name","a11yProps","protoTypes","func","isRequired","object","node","any","mapStateToProps","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport TournamentDetails from '../components/tournament/TournamentDetails';\r\nimport StaticProfile from '../components/profile/StaticProfile';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getUserData, getTournament } from '../redux/actions/dataActions';\r\n\r\n// MUI stuffs\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n// test\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst styles = {\r\n    image: {\r\n        width: 120,\r\n        objectFit: 'cover',\r\n        maxWidth: '100%',\r\n        borderRadius: '50%'\r\n    },\r\n    typography: {\r\n        flexGrow: 1,\r\n        align: \"center\"\r\n      }\r\n\r\n}\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\nclass tournament extends Component {\r\n    state = {\r\n        profile: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        const tournamentId = this.props.match.params.tournamentId;\r\n        console.log(\"TEST \" + tournamentId);\r\n        this.props.getTournament(tournamentId);\r\n        // axios.get(`/tournament/${tournamentId}`)\r\n        //      .then(res => {\r\n        //          this.setState({\r\n        //              profile: res.data.user\r\n        //          })\r\n        //      })\r\n        //     .catch(err => console.log(err));\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const { tournament } = this.props.data;\r\n\r\n        const { classes } = this.props;\r\n\r\n        console.log(\"TOURN? \" + tournament);\r\n\r\n\r\n        const [value, setValue] = useState(0);\r\n\r\n        const handleChange = (event, newValue) => {\r\n            setValue(newValue);\r\n        };\r\n\r\n        \r\n\r\n        return (\r\n\r\n            <Grid container spacing={0} direction=\"row\" alignItems=\"center\">\r\n                <Grid item sm={2} xs={12}>\r\n                    <img src={tournament.userImage} height className={classes.image}/>\r\n                </Grid>\r\n                <Grid item sm={10} xs={12}>\r\n                    <Typography variant=\"h4\" color=\"primary\" className={classes.typography}><b>{tournament.name}</b></Typography>\r\n            </Grid>\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        {/* <TournamentDetails tournament={tournament}/> */}\r\n\r\n                        <div>\r\n                            <AppBar position=\"static\">\r\n                                <Tabs\r\n                                value={value}\r\n                                onChange={handleChange}\r\n                                aria-label=\"simple tabs example\"\r\n                                >\r\n                                <Tab label=\"Item One\" {...a11yProps(0)} />\r\n                                <Tab label=\"Item Two\" {...a11yProps(1)} />\r\n                                <Tab label=\"Item Three\" {...a11yProps(2)} />\r\n                                </Tabs>\r\n                            </AppBar>\r\n                            <TabPanel value={value} index={0}>\r\n                                Item One\r\n                            </TabPanel>\r\n                            <TabPanel value={value} index={1}>\r\n                                Item Two\r\n                            </TabPanel>\r\n                            <TabPanel value={value} index={2}>\r\n                                Item Three\r\n                            </TabPanel>\r\n                        </div>\r\n                    </Grid>  \r\n                </Grid>\r\n            </Grid>\r\n\r\n            \r\n\r\n            \r\n\r\n            \r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\ntournament.protoTypes = {\r\n    getUserData: PropTypes.func.isRequired,\r\n    getTournament: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    \r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.data\r\n})\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      \"aria-controls\": `simple-tabpanel-${index}`\r\n    };\r\n  }\r\n\r\nexport default connect(mapStateToProps, {getUserData, getTournament})(withStyles(styles)(tournament));\r\n"]},"metadata":{},"sourceType":"module"}