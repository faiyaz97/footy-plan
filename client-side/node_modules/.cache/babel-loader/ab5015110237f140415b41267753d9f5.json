{"ast":null,"code":"import { SET_TOURNAMENTS, LOADING_DATA, DELETE_TOURNAMENT, POST_TOURNAMENT } from '../types';\nconst initialState = {\n  tournaments: [],\n  tournament: {},\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOADING_DATA:\n      return { ...state,\n        loading: true\n      };\n\n    case SET_TOURNAMENTS:\n      return { ...state,\n        tournaments: action.payload,\n        loading: false\n      };\n\n    case SET_TOURNAMENTS:\n      return { ...state,\n        tournament: action.payload\n      };\n\n    case DELETE_TOURNAMENT:\n      let index = state.tournaments.findIndex(tournament => tournament.tournamentId === action.payload);\n      state.tournaments.splice(index, 1);\n      return { ...state\n      };\n\n    case POST_TOURNAMENT:\n      return { ...state,\n        tournaments: [action.payload, ...state.tournaments]\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Faiyaz/Desktop/ffu/FYP-21/football-tournaments/client-side/src/redux/reducers/dataReducer.js"],"names":["SET_TOURNAMENTS","LOADING_DATA","DELETE_TOURNAMENT","POST_TOURNAMENT","initialState","tournaments","tournament","loading","state","action","type","payload","index","findIndex","tournamentId","splice"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,YAA1B,EAAwCC,iBAAxC,EAA2DC,eAA3D,QAAiF,UAAjF;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,EADI;AAEjBC,EAAAA,UAAU,EAAE,EAFK;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB;AAMA,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA+BK,MAA/B,EAAsC;AACjD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,YAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHD,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKP,eAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHH,QAAAA,WAAW,EAAEI,MAAM,CAACE,OAFjB;AAGHJ,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKP,eAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHF,QAAAA,UAAU,EAAEG,MAAM,CAACE;AAFhB,OAAP;;AAIJ,SAAKT,iBAAL;AACI,UAAIU,KAAK,GAAGJ,KAAK,CAACH,WAAN,CAAkBQ,SAAlB,CAA4BP,UAAU,IAAIA,UAAU,CAACQ,YAAX,KAA4BL,MAAM,CAACE,OAA7E,CAAZ;AACAH,MAAAA,KAAK,CAACH,WAAN,CAAkBU,MAAlB,CAAyBH,KAAzB,EAAgC,CAAhC;AACA,aAAO,EACH,GAAGJ;AADA,OAAP;;AAGJ,SAAKL,eAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHH,QAAAA,WAAW,EAAE,CACTI,MAAM,CAACE,OADE,EAET,GAAGH,KAAK,CAACH,WAFA;AAFV,OAAP;;AAOJ;AACI,aAAOG,KAAP;AAhCR;AAkCH","sourcesContent":["import { SET_TOURNAMENTS, LOADING_DATA, DELETE_TOURNAMENT, POST_TOURNAMENT} from '../types';\r\n\r\nconst initialState = {\r\n    tournaments: [],\r\n    tournament: {},\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case SET_TOURNAMENTS:\r\n            return {\r\n                ...state,\r\n                tournaments: action.payload,\r\n                loading: false\r\n            };\r\n        case SET_TOURNAMENTS:\r\n            return {\r\n                ...state,\r\n                tournament: action.payload\r\n            };\r\n        case DELETE_TOURNAMENT:\r\n            let index = state.tournaments.findIndex(tournament => tournament.tournamentId === action.payload);\r\n            state.tournaments.splice(index, 1);\r\n            return {\r\n                ...state\r\n            };\r\n        case POST_TOURNAMENT:\r\n            return {\r\n                ...state,\r\n                tournaments: [\r\n                    action.payload,\r\n                    ...state.tournaments\r\n                ]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}