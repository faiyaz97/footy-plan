{"ast":null,"code":"import { SET_TOURNAMENTS, LOADING_DATA, DELETE_TOURNAMENT, LOADING_UI, CLEAR_ERRORS, SET_ERRORS, POST_TOURNAMENT } from '../types';\nimport axios from 'axios'; // get all tournaments\n\nexport const getTournaments = () => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get('/tournaments').then(res => {\n    dispatch({\n      type: SET_TOURNAMENTS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_TOURNAMENTS,\n      payload: []\n    });\n  });\n}; // post a torunament\n\nexport const postTournament = newTournament => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/tournament', newTournament).then(res => {\n    dispatch({\n      type: POST_TOURNAMENT,\n      payload: res.data\n    });\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const deleteTournament = tournamentId => dispatch => {\n  axios.delete(`/tournament/${tournamentId}`).then(() => {\n    dispatch({\n      type: DELETE_TOURNAMENT,\n      payload: tournamentId\n    });\n  }).catch(err => console.log(err));\n};\nexport const clearErrors = () => dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["C:/Users/Faiyaz/Desktop/ffu/FYP-21/football-tournaments/client-side/src/redux/actions/dataActions.js"],"names":["SET_TOURNAMENTS","LOADING_DATA","DELETE_TOURNAMENT","LOADING_UI","CLEAR_ERRORS","SET_ERRORS","POST_TOURNAMENT","axios","getTournaments","dispatch","type","get","then","res","payload","data","catch","err","postTournament","newTournament","post","response","deleteTournament","tournamentId","delete","console","log","clearErrors"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,YAA1B,EAAwCC,iBAAxC,EAA2DC,UAA3D,EAAuEC,YAAvE,EAAqFC,UAArF,EAAiGC,eAAjG,QAAwH,UAAxH;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAOC,QAAD,IAAc;AAC9CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAET;AAAR,GAAD,CAAR;AACAM,EAAAA,KAAK,CACFI,GADH,CACO,cADP,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,eADC;AAEPc,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,KAAD,CAAR;AAID,GAPH,EAQGC,KARH,CAQUC,GAAD,IAAS;AACdR,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,eADC;AAEPc,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAbH;AAcD,CAhBI,C,CAkBL;;AACA,OAAO,MAAMI,cAAc,GAAIC,aAAD,IAAoBV,QAAD,IAAc;AAC7DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;AACAI,EAAAA,KAAK,CACFa,IADH,CACQ,aADR,EACuBD,aADvB,EAEGP,IAFH,CAESC,GAAD,IAAS;AACbJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,eADC;AAEPQ,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,KAAD,CAAR;AAIAN,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN;AAAP,KAAD,CAAR;AACD,GARH,EASGY,KATH,CASUC,GAAD,IAAS;AACdR,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,UADC;AAEPS,MAAAA,OAAO,EAAEG,GAAG,CAACI,QAAJ,CAAaN;AAFf,KAAD,CAAR;AAID,GAdH;AAeD,CAjBM;AAoBP,OAAO,MAAMO,gBAAgB,GAAIC,YAAD,IAAmBd,QAAD,IAAc;AAC9DF,EAAAA,KAAK,CAACiB,MAAN,CAAc,eAAcD,YAAa,EAAzC,EACGX,IADH,CACQ,MAAM;AACVH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,iBAAR;AAA2BY,MAAAA,OAAO,EAAES;AAApC,KAAD,CAAR;AACD,GAHH,EAIGP,KAJH,CAISC,GAAG,IAAIQ,OAAO,CAACC,GAAR,CAAYT,GAAZ,CAJhB;AAKD,CANM;AAQP,OAAO,MAAMU,WAAW,GAAG,MAAMlB,QAAQ,IAAI;AAC3CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AACD,CAFM","sourcesContent":["import { SET_TOURNAMENTS, LOADING_DATA, DELETE_TOURNAMENT, LOADING_UI, CLEAR_ERRORS, SET_ERRORS, POST_TOURNAMENT } from '../types';\r\nimport axios from 'axios';\r\n\r\n// get all tournaments\r\nexport const getTournaments = () => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios\r\n      .get('/tournaments')\r\n      .then((res) => {\r\n        dispatch({\r\n          type: SET_TOURNAMENTS,\r\n          payload: res.data\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: SET_TOURNAMENTS,\r\n          payload: []\r\n        });\r\n      });\r\n  };\r\n\r\n  // post a torunament\r\n  export const postTournament = (newTournament) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios\r\n      .post('/tournament', newTournament)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: POST_TOURNAMENT,\r\n          payload: res.data\r\n        });\r\n        dispatch({type: CLEAR_ERRORS});\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: SET_ERRORS,\r\n          payload: err.response.data\r\n        });\r\n      });\r\n  };\r\n\r\n\r\n  export const deleteTournament = (tournamentId) => (dispatch) => {\r\n    axios.delete(`/tournament/${tournamentId}`)\r\n      .then(() => {\r\n        dispatch({ type: DELETE_TOURNAMENT, payload: tournamentId})\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  export const clearErrors = () => dispatch => {\r\n    dispatch({ type: CLEAR_ERRORS })\r\n  }"]},"metadata":{},"sourceType":"module"}