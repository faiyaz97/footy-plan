{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Faiyaz\\\\Desktop\\\\ffu\\\\FYP-21\\\\football-tournaments\\\\client-side\\\\src\\\\pages\\\\signup.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport AppIcon from '../images/logo.png';\nimport { Link } from 'react-router-dom'; // MUI stuff\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress'; // redux stuff\n\nimport { connect } from 'react-redux';\nimport { signupUser } from '../redux/actions/userActions';\n\nconst styles = theme => ({ ...theme.forms\n});\n\nclass signup extends Component {\n  constructor() {\n    super(); // object of the signup data\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      }); // object with signup info\n\n      const newUserData = {\n        email: this.state.email,\n        password: this.state.password,\n        confirmPassword: this.state.confirmPassword,\n        handle: this.state.handle\n      };\n      this.props.signupUser(newUserData, this.props.history);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      handle: '',\n      errors: {}\n    };\n  } // invoked immediately after this component is mounted\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      // set the errors given in response\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n  } // event handle when submit\n\n\n  // render the page\n  render() {\n    const {\n      classes,\n      UI: {\n        loading\n      }\n    } = this.props;\n    const {\n      errors\n    } = this.state;\n    return (\n      /*#__PURE__*/\n      // page is divided using grid\n      _jsxDEV(Grid, {\n        container: true,\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: true,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.image,\n            src: AppIcon,\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            className: classes.pageTitle,\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"email\",\n              name: \"email\",\n              type: \"email\",\n              label: \"Email\",\n              className: classes.textField,\n              helperText: errors.email,\n              error: errors.email ? true : false,\n              value: this.state.email,\n              onChange: this.handleChange,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"password\",\n              name: \"password\",\n              type: \"password\",\n              label: \"Password\",\n              className: classes.textField,\n              helperText: errors.password,\n              error: errors.password ? true : false,\n              value: this.state.password,\n              onChange: this.handleChange,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"confirmPassword\",\n              name: \"confirmPassword\",\n              type: \"password\",\n              label: \"ConfirmPassword\",\n              className: classes.textField,\n              helperText: errors.confirmPassword,\n              error: errors.confirmPassword ? true : false,\n              value: this.state.confirmPassword,\n              onChange: this.handleChange,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"handle\",\n              name: \"handle\",\n              type: \"text\",\n              label: \"Handle\",\n              className: classes.textField,\n              helperText: errors.handle,\n              error: errors.handle ? true : false,\n              value: this.state.handle,\n              onChange: this.handleChange,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this), errors.general && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              className: classes.customError,\n              children: errors.general\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.button,\n              disabled: loading,\n              children: [\"Signup\", loading &&\n              /*#__PURE__*/\n              // circular progression bar during loading of submit\n              _jsxDEV(CircularProgress, {\n                size: 30,\n                className: classes.progress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Already have an account? Login \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                children: \"here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 68\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}\n\nsignup.propTypes = {\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  signupUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps, {\n  signupUser\n})(withStyles(styles)(signup));","map":{"version":3,"sources":["C:/Users/Faiyaz/Desktop/ffu/FYP-21/football-tournaments/client-side/src/pages/signup.js"],"names":["React","Component","withStyles","PropTypes","AppIcon","Link","Grid","Typography","TextField","Button","CircularProgress","connect","signupUser","styles","theme","forms","signup","constructor","handleSubmit","event","preventDefault","setState","loading","newUserData","email","state","password","confirmPassword","handle","props","history","handleChange","target","name","value","errors","componentWillReceiveProps","nextProps","UI","render","classes","form","image","pageTitle","textField","general","customError","button","progress","propTypes","object","isRequired","user","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport AppIcon from '../images/logo.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// MUI stuff\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// redux stuff\r\n\r\nimport {connect} from 'react-redux';\r\nimport {signupUser} from '../redux/actions/userActions';\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.forms\r\n  });\r\n\r\n  class signup extends Component {\r\n    constructor() {\r\n      super();\r\n      // object of the signup data\r\n      this.state = {\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        handle: '',\r\n        errors: {}\r\n      };\r\n    }\r\n    // invoked immediately after this component is mounted\r\n    componentWillReceiveProps(nextProps) {\r\n      if (nextProps.UI.errors) {\r\n        // set the errors given in response\r\n        this.setState({ errors: nextProps.UI.errors });\r\n      }\r\n    }\r\n    // event handle when submit\r\n    handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      this.setState({\r\n        loading: true\r\n      });\r\n      // object with signup info\r\n      const newUserData = {\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        confirmPassword: this.state.confirmPassword,\r\n        handle: this.state.handle\r\n      };\r\n      this.props.signupUser(newUserData, this.props.history);\r\n    };\r\n    // event handle when data change\r\n    handleChange = (event) => {\r\n      this.setState({\r\n        [event.target.name]: event.target.value\r\n      });\r\n    };\r\n    // render the page\r\n    render() {\r\n      const {\r\n        classes,\r\n        UI: { loading }\r\n      } = this.props;\r\n      const { errors } = this.state;\r\n        return (\r\n            // page is divided using grid\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm/>\r\n                <Grid item sm>\r\n                    <img className={classes.image} src={AppIcon} alt=\"logo\"/>\r\n                    <Typography variant=\"h3\" className={classes.pageTitle}>\r\n                        Signup\r\n                    </Typography>\r\n                    {/* login form - input are validated in server side and will get the success response or not */}\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField id=\"email\" name=\"email\" type=\"email\" label=\"Email\" className={classes.textField} helperText={errors.email} error={errors.email ? true : false} value={this.state.email} onChange={this.handleChange} fullWidth/>\r\n                        <TextField id=\"password\" name=\"password\" type=\"password\" label=\"Password\" className={classes.textField} helperText={errors.password} error={errors.password ? true : false} value={this.state.password} onChange={this.handleChange} fullWidth/>\r\n                        <TextField id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" label=\"ConfirmPassword\" className={classes.textField} helperText={errors.confirmPassword} error={errors.confirmPassword ? true : false} value={this.state.confirmPassword} onChange={this.handleChange} fullWidth/>\r\n                        <TextField id=\"handle\" name=\"handle\" type=\"text\" label=\"Handle\" className={classes.textField} helperText={errors.handle} error={errors.handle ? true : false} value={this.state.handle} onChange={this.handleChange} fullWidth/>\r\n                        {errors.general && (\r\n                            <Typography variant=\"body2\" className={classes.customError}>\r\n                                {errors.general}\r\n                            </Typography>\r\n\r\n                        )}\r\n                        {/* submit button */}\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.button} disabled={loading}>\r\n                            Signup\r\n                            {loading && (\r\n                              // circular progression bar during loading of submit\r\n                              <CircularProgress size={30} className={classes.progress}/>\r\n                            )}\r\n                            </Button>\r\n                        <br/><small>Already have an account? Login <Link to=\"/login\">here</Link></small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm/>\r\n            </Grid>\r\n        )\r\n    }\r\n  }\r\n\r\nsignup.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    signupUser: PropTypes.func.isRequired\r\n  };\r\n  \r\n  const mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI\r\n  });\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { signupUser }\r\n  )(withStyles(styles)(signup));\r\n"]},"metadata":{},"sourceType":"module"}