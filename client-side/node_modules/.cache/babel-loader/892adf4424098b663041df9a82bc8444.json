{"ast":null,"code":"import { SET_TOURNAMENTS, LOADING_DATA } from '../types';\nconst initialState = {\n  tournaments: [],\n  tournament: {},\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOADING_DATA:\n      return { ...state,\n        loading: true\n      };\n\n    case SET_TOURNAMENTS:\n      return { ...state,\n        tournaments: action.payload,\n        loading: false\n      };\n\n    case DELETE_TOURNAMENT:\n      index = state.tournaments.findIndex(tournament => tournament.tournamentId === action.payload);\n      state.tournaments.splice(index, 1);\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Faiyaz/Desktop/ffu/FYP-21/football-tournaments/client-side/src/redux/reducers/dataReducer.js"],"names":["SET_TOURNAMENTS","LOADING_DATA","initialState","tournaments","tournament","loading","state","action","type","payload","DELETE_TOURNAMENT","index","findIndex","tournamentId","splice"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,YAA1B,QAA6C,UAA7C;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,EADI;AAEjBC,EAAAA,UAAU,EAAE,EAFK;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB;AAMA,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA+BK,MAA/B,EAAsC;AACjD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,YAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHD,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKL,eAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHH,QAAAA,WAAW,EAAEI,MAAM,CAACE,OAFjB;AAGHJ,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKK,iBAAL;AACIC,MAAAA,KAAK,GAAGL,KAAK,CAACH,WAAN,CAAkBS,SAAlB,CAA4BR,UAAU,IAAIA,UAAU,CAACS,YAAX,KAA4BN,MAAM,CAACE,OAA7E,CAAR;AACAH,MAAAA,KAAK,CAACH,WAAN,CAAkBW,MAAlB,CAAyBH,KAAzB,EAAgC,CAAhC;AACA,aAAO,EACH,GAAGL;AADA,OAAP;;AAGJ;AACI,aAAOA,KAAP;AAnBR;AAqBH","sourcesContent":["import { SET_TOURNAMENTS, LOADING_DATA} from '../types';\r\n\r\nconst initialState = {\r\n    tournaments: [],\r\n    tournament: {},\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case SET_TOURNAMENTS:\r\n            return {\r\n                ...state,\r\n                tournaments: action.payload,\r\n                loading: false\r\n            };\r\n        case DELETE_TOURNAMENT:\r\n            index = state.tournaments.findIndex(tournament => tournament.tournamentId === action.payload);\r\n            state.tournaments.splice(index, 1);\r\n            return {\r\n                ...state\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}