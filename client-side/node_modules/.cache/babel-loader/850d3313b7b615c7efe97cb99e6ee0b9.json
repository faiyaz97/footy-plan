{"ast":null,"code":"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Tournament from '../components/tournament/Tournament';\nimport StaticProfile from '../components/profile/StaticProfile';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { connect } from 'react-redux';\nimport { getUserData, getTournament } from '../redux/actions/dataActions'; // MUI stuffs\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nconst styles = {\n  card: {\n    position: 'relative',\n    display: 'flex',\n    marginBottom: 20\n  },\n  image: {\n    minWidth: 200,\n    objectFit: 'cover'\n  },\n  content: {\n    padding: 25\n  }\n};\n\nclass tournament extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profile: null\n    };\n  }\n\n  componentDidMount() {\n    const tournamentId = this.props.match.params.tournamentId;\n    console.log(\"TEST \" + tournamentId);\n    this.props.getTournament(tournamentId); // axios.get(`/tournament/${tournamentId}`)\n    //      .then(res => {\n    //          this.setState({\n    //              profile: res.data.user\n    //          })\n    //      })\n    //     .catch(err => console.log(err));\n  }\n\n  render() {\n    const {\n      tournament\n    } = this.props.data; //const { classes } = this.props;\n\n    console.log(\"TOURN? \" + tournament);\n    return null;\n  }\n\n}\n\ntournament.protoTypes = {\n  getUserData: PropTypes.func.isRequired,\n  getTournament: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps, {\n  getUserData,\n  getTournament\n})(withStyles(styles)(tournament));","map":{"version":3,"sources":["C:/Users/Faiyaz/Desktop/ffu/FYP-21/football-tournaments/client-side/src/pages/tournament.js"],"names":["React","Component","PropTypes","axios","Tournament","StaticProfile","withStyles","connect","getUserData","getTournament","Card","CardContent","CardMedia","Typography","Grid","styles","card","position","display","marginBottom","image","minWidth","objectFit","content","padding","tournament","state","profile","componentDidMount","tournamentId","props","match","params","console","log","render","data","protoTypes","func","isRequired","object","mapStateToProps"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,8BAA3C,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,UADR;AAEFC,IAAAA,OAAO,EAAE,MAFP;AAGFC,IAAAA,YAAY,EAAE;AAHZ,GADK;AAMXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE,GADP;AAEHC,IAAAA,SAAS,EAAE;AAFR,GANI;AAUXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE;AADJ;AAVE,CAAf;;AAeA,MAAMC,UAAN,SAAyBxB,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/ByB,KAD+B,GACvB;AACJC,MAAAA,OAAO,EAAE;AADL,KADuB;AAAA;;AAI/BC,EAAAA,iBAAiB,GAAE;AACf,UAAMC,YAAY,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,YAA7C;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAUL,YAAtB;AACA,SAAKC,KAAL,CAAWrB,aAAX,CAAyBoB,YAAzB,EAHe,CAIf;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AACDM,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEV,MAAAA;AAAF,QAAiB,KAAKK,KAAL,CAAWM,IAAlC,CADK,CAGL;;AAEAH,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYT,UAAxB;AAGA,WAAO,IAAP;AACH;;AAzB8B;;AA4BnCA,UAAU,CAACY,UAAX,GAAwB;AACpB7B,EAAAA,WAAW,EAAEN,SAAS,CAACoC,IAAV,CAAeC,UADR;AAEpB9B,EAAAA,aAAa,EAAEP,SAAS,CAACoC,IAAV,CAAeC,UAFV;AAGpBH,EAAAA,IAAI,EAAElC,SAAS,CAACsC,MAAV,CAAiBD;AAHH,CAAxB;;AAMA,MAAME,eAAe,GAAGf,KAAK,KAAK;AAC9BU,EAAAA,IAAI,EAAEV,KAAK,CAACU;AADkB,CAAL,CAA7B;;AAIA,eAAe7B,OAAO,CAACkC,eAAD,EAAkB;AAACjC,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CAAuDH,UAAU,CAACS,MAAD,CAAV,CAAmBU,UAAnB,CAAvD,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport Tournament from '../components/tournament/Tournament';\r\nimport StaticProfile from '../components/profile/StaticProfile';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getUserData, getTournament } from '../redux/actions/dataActions';\r\n\r\n// MUI stuffs\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = {\r\n    card: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        marginBottom: 20\r\n    },\r\n    image: {\r\n        minWidth: 200,\r\n        objectFit: 'cover'\r\n    },\r\n    content: {\r\n        padding: 25\r\n    }\r\n}\r\n\r\nclass tournament extends Component {\r\n    state = {\r\n        profile: null\r\n    }\r\n    componentDidMount(){\r\n        const tournamentId = this.props.match.params.tournamentId;\r\n        console.log(\"TEST \" + tournamentId);\r\n        this.props.getTournament(tournamentId);\r\n        // axios.get(`/tournament/${tournamentId}`)\r\n        //      .then(res => {\r\n        //          this.setState({\r\n        //              profile: res.data.user\r\n        //          })\r\n        //      })\r\n        //     .catch(err => console.log(err));\r\n    }\r\n    render() {\r\n        const { tournament } = this.props.data;\r\n\r\n        //const { classes } = this.props;\r\n\r\n        console.log(\"TOURN? \" + tournament);\r\n\r\n\r\n        return null\r\n    }\r\n}\r\n\r\ntournament.protoTypes = {\r\n    getUserData: PropTypes.func.isRequired,\r\n    getTournament: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.data\r\n})\r\n\r\nexport default connect(mapStateToProps, {getUserData, getTournament})(withStyles(styles)(tournament));\r\n"]},"metadata":{},"sourceType":"module"}