{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Faiyaz\\\\Desktop\\\\ffu\\\\FYP-21\\\\football-tournaments\\\\client-side\\\\src\\\\components\\\\tournament\\\\TournamentTable.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport MyButton from '../../utility/MyButton';\nimport DeleteTournament from './DeleteTournament';\nimport TournamentDialog from './TournamentDialog'; // MUI stuffs\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { connect } from 'react-redux';\nimport { deleteTournament } from '../../redux/actions/dataActions';\nconst styles = {\n  table: {\n    '& .MuiDataGrid-row.Mui-odd': {\n      backgroundColor: '#e2e2e2'\n    },\n    '& .MuiDataGrid-columnsContainer': {\n      backgroundColor: '#1b7700',\n      color: '#fff'\n    },\n    '& .MuiDataGrid-main': {\n      backgroundColor: 'white'\n    },\n    '& .MuiIconButton-label': {\n      color: '#fff'\n    },\n    '& .MuiSvgIcon-root': {\n      backgroundColor: '#1b7700'\n    },\n    '& .MuiDataGrid-colCellTitle': {\n      fontWeight: 'bold'\n    }\n  }\n};\nconst columns = [{\n  field: 'tournamentId',\n  headerName: 'TID',\n  width: 130,\n  display: false\n}, {\n  field: 'id',\n  headerName: '#',\n  width: 70\n}, {\n  field: 'tournamentName',\n  headerName: 'Tournament Name',\n  width: 180\n}, {\n  field: 'teamsN',\n  headerName: 'Teams #',\n  width: 110\n}, {\n  field: 'type',\n  headerName: 'Type',\n  width: 100\n}, {\n  field: 'format',\n  headerName: 'Format',\n  width: 150\n}, {\n  field: 'location',\n  headerName: 'Location',\n  width: 200\n}, {\n  field: 'description',\n  headerName: 'Description',\n  width: 250\n}, {\n  field: 'date',\n  headerName: 'Date',\n  width: 110\n} // {\n//   field: 'fullName',\n//   headerName: 'Full name',\n//   description: 'This column has a value getter and is not sortable.',\n//   sortable: false,\n//   width: 160,\n//   valueGetter: (params) =>\n//     `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\n// },\n];\nlet rows = [];\n\nclass TournamentTable extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleRowClick = params => {\n      console.log(params);\n    };\n  }\n\n  render() {\n    dayjs.extend(relativeTime); //console.log(\"TEST2: \" + JSON.stringify(this.props.tournaments));\n\n    const {\n      classes\n    } = this.props;\n    const tournaments = this.props.tournaments;\n    let count = 1;\n    tournaments.map(tournament => {\n      let row = {\n        tournamentId: \"\",\n        id: 0,\n        tournamentName: \"\",\n        teamsN: 0,\n        type: \"\",\n        format: \"\",\n        location: \"\",\n        description: \"\",\n        date: \"\"\n      };\n      row.tournamentId = tournament.tournamentId;\n      row.id = count;\n      row.tournamentName = tournament.name;\n      row.teamsN = tournament.teamsN;\n      row.type = tournament.type;\n      row.format = tournament.format;\n      row.location = tournament.location;\n      row.description = tournament.description;\n      row.date = tournament.date;\n      rows.push(row);\n      console.log(\"TORNEO \" + count + \" :\" + JSON.stringify(tournament));\n      count = count + 1;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        autoHeight: true,\n        className: classes.table,\n        rows: rows,\n        columns: columns,\n        pageSize: 15,\n        onRowClick: this.handleRowClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nTournamentTable.propTypes = {\n  user: PropTypes.object.isRequired,\n  tournament: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapActionsToProps = {};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(TournamentTable));","map":{"version":3,"sources":["C:/Users/Faiyaz/Desktop/ffu/FYP-21/football-tournaments/client-side/src/components/tournament/TournamentTable.js"],"names":["React","Component","withStyles","PropTypes","Link","dayjs","relativeTime","MyButton","DeleteTournament","TournamentDialog","Card","CardContent","CardMedia","Typography","DataGrid","connect","deleteTournament","styles","table","backgroundColor","color","fontWeight","columns","field","headerName","width","display","rows","TournamentTable","handleRowClick","params","console","log","render","extend","classes","props","tournaments","count","map","tournament","row","tournamentId","id","tournamentName","teamsN","type","format","location","description","date","name","push","JSON","stringify","height","propTypes","user","object","isRequired","mapStateToProps","state","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport MyButton from '../../utility/MyButton';\r\nimport DeleteTournament from './DeleteTournament';\r\nimport TournamentDialog from './TournamentDialog';\r\n\r\n// MUI stuffs\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\n\r\nimport { connect } from 'react-redux' ;\r\nimport { deleteTournament } from '../../redux/actions/dataActions';\r\n\r\n\r\nconst styles = {\r\n    table : {\r\n\r\n        '& .MuiDataGrid-row.Mui-odd': {\r\n            backgroundColor: '#e2e2e2',\r\n        },\r\n        '& .MuiDataGrid-columnsContainer': {\r\n            backgroundColor: '#1b7700',\r\n            color: '#fff',\r\n        },\r\n        '& .MuiDataGrid-main':{\r\n            backgroundColor: 'white',\r\n        },\r\n        '& .MuiIconButton-label':{\r\n            color: '#fff'\r\n        },\r\n        '& .MuiSvgIcon-root':{\r\n            backgroundColor: '#1b7700',\r\n        },\r\n        '& .MuiDataGrid-colCellTitle':{\r\n            fontWeight: 'bold'\r\n        }\r\n\r\n    }\r\n    \r\n    \r\n}\r\n\r\nconst columns = [\r\n    { field: 'tournamentId', headerName: 'TID', width: 130, display: false},\r\n    { field: 'id', headerName: '#', width: 70},\r\n    { field: 'tournamentName', headerName: 'Tournament Name', width: 180 },\r\n    { field: 'teamsN', headerName: 'Teams #', width: 110, },\r\n    { field: 'type', headerName: 'Type', width: 100 },\r\n    { field: 'format', headerName: 'Format', width: 150 },\r\n    { field: 'location', headerName: 'Location', width: 200 },\r\n    { field: 'description', headerName: 'Description', width: 250 },\r\n    { field: 'date', headerName: 'Date', width: 110 },\r\n\r\n    // {\r\n    //   field: 'fullName',\r\n    //   headerName: 'Full name',\r\n    //   description: 'This column has a value getter and is not sortable.',\r\n    //   sortable: false,\r\n    //   width: 160,\r\n    //   valueGetter: (params) =>\r\n    //     `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\r\n    // },\r\n];\r\n  \r\nlet rows = [];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass TournamentTable extends Component {\r\n\r\n    handleRowClick = (params) => {\r\n        console.log(params);\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        dayjs.extend(relativeTime);\r\n        //console.log(\"TEST2: \" + JSON.stringify(this.props.tournaments));\r\n        const { classes } = this.props;\r\n\r\n        const tournaments = this.props.tournaments;\r\n        \r\n        let count = 1;\r\n\r\n        tournaments.map((tournament) => {\r\n\r\n            let row = { tournamentId: \"\", id: 0, tournamentName: \"\", teamsN: 0, type: \"\", format: \"\", location: \"\", description: \"\", date: \"\" }\r\n            \r\n            row.tournamentId = tournament.tournamentId;\r\n            row.id = count;\r\n            row.tournamentName = tournament.name;\r\n            row.teamsN = tournament.teamsN;\r\n            row.type = tournament.type;\r\n            row.format = tournament.format;\r\n            row.location = tournament.location;\r\n            row.description = tournament.description;\r\n            row.date = tournament.date;\r\n\r\n            rows.push(row);\r\n            console.log(\"TORNEO \" + count + \" :\" + JSON.stringify(tournament))\r\n            count = count + 1;\r\n        })\r\n\r\n\r\n        \r\n        return (\r\n            <div style={{ height: 400, width: '100%' }}>\r\n              <DataGrid autoHeight className={classes.table} rows={rows} columns={columns} pageSize={15} onRowClick={this.handleRowClick}  />\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nTournamentTable.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    tournament: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n})\r\n\r\nconst mapActionsToProps = {\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(TournamentTable));\r\n"]},"metadata":{},"sourceType":"module"}