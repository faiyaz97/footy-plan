{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Faiyaz\\\\Desktop\\\\ffu\\\\FYP-21\\\\football-tournaments\\\\client-side\\\\src\\\\pages\\\\signup.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport AppIcon from '../images/logo.png';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'; // MUI stuff\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress'; // redux stuff\n\nimport { connect } from 'react-redux';\nimport { signupUser } from '../redux/actions/userActions';\n\nconst styles = theme => ({ ...theme.forms\n});\n\nclass signup extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const newUserData = {\n        email: this.state.email,\n        password: this.state.password,\n        confirmPassword: this.state.confirmPassword,\n        handle: this.state.handle\n      }.this.props.signupUser(newUserData, this.props.history);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      handle: '',\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      UI: {\n        loading\n      }\n    } = this.props;\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.image,\n          src: AppIcon,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          className: classes.pageTitle,\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"email\",\n            name: \"email\",\n            type: \"email\",\n            label: \"Email\",\n            className: classes.textField,\n            helperText: errors.email,\n            error: errors.email ? true : false,\n            value: this.state.email,\n            onChange: this.handleChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"password\",\n            name: \"password\",\n            type: \"password\",\n            label: \"Password\",\n            className: classes.textField,\n            helperText: errors.password,\n            error: errors.password ? true : false,\n            value: this.state.password,\n            onChange: this.handleChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            type: \"password\",\n            label: \"ConfirmPassword\",\n            className: classes.textField,\n            helperText: errors.confirmPassword,\n            error: errors.confirmPassword ? true : false,\n            value: this.state.confirmPassword,\n            onChange: this.handleChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"handle\",\n            name: \"handle\",\n            type: \"text\",\n            label: \"Handle\",\n            className: classes.textField,\n            helperText: errors.handle,\n            error: errors.handle ? true : false,\n            value: this.state.handle,\n            onChange: this.handleChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), errors.general && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            className: classes.customError,\n            children: errors.general\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.button,\n            disabled: loading,\n            children: [\"Signup\", loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 30,\n              className: classes.progress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Already have an account? Login \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 68\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nsignup.propTypes = {\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  logoutUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps, {\n  signupUser\n})(withStyles(styles)(signup));","map":{"version":3,"sources":["C:/Users/Faiyaz/Desktop/ffu/FYP-21/football-tournaments/client-side/src/pages/signup.js"],"names":["React","Component","withStyles","PropTypes","AppIcon","axios","Link","Grid","Typography","TextField","Button","CircularProgress","connect","signupUser","styles","theme","forms","signup","constructor","handleSubmit","event","preventDefault","setState","loading","newUserData","email","state","password","confirmPassword","handle","this","props","history","handleChange","target","name","value","errors","componentWillReceiveProps","nextProps","UI","render","classes","form","image","pageTitle","textField","general","customError","button","progress","propTypes","object","isRequired","user","logoutUser","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport AppIcon from '../images/logo.png';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// MUI stuff\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// redux stuff\r\n\r\nimport {connect} from 'react-redux';\r\nimport {signupUser} from '../redux/actions/userActions';\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.forms\r\n  });\r\n\r\nclass signup extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          email: '',\r\n          password: '',\r\n          confirmPassword: '',\r\n          handle: '',\r\n          errors: {}\r\n        };\r\n      }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.UI.errors){\r\n          this.setState({ errors: nextProps.UI.errors });\r\n        }\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        const newUserData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n            handle: this.state.handle\r\n        }\r\n        .this.props.signupUser(newUserData, this.props.history);\r\n\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        const { classes, UI: {loading}} = this.props;\r\n        const { errors } = this.state;\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm/>\r\n                <Grid item sm>\r\n                    <img className={classes.image} src={AppIcon} alt=\"logo\"/>\r\n                    <Typography variant=\"h3\" className={classes.pageTitle}>\r\n                        Signup\r\n                    </Typography>\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField id=\"email\" name=\"email\" type=\"email\" label=\"Email\" className={classes.textField} helperText={errors.email} error={errors.email ? true : false} value={this.state.email} onChange={this.handleChange} fullWidth/>\r\n                        <TextField id=\"password\" name=\"password\" type=\"password\" label=\"Password\" className={classes.textField} helperText={errors.password} error={errors.password ? true : false} value={this.state.password} onChange={this.handleChange} fullWidth/>\r\n                        <TextField id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" label=\"ConfirmPassword\" className={classes.textField} helperText={errors.confirmPassword} error={errors.confirmPassword ? true : false} value={this.state.confirmPassword} onChange={this.handleChange} fullWidth/>\r\n                        <TextField id=\"handle\" name=\"handle\" type=\"text\" label=\"Handle\" className={classes.textField} helperText={errors.handle} error={errors.handle ? true : false} value={this.state.handle} onChange={this.handleChange} fullWidth/>\r\n                        {errors.general && (\r\n                            <Typography variant=\"body2\" className={classes.customError}>\r\n                                {errors.general}\r\n                            </Typography>\r\n\r\n                        )}\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.button} disabled={loading}>\r\n                            Signup\r\n                            {loading && (\r\n                                <CircularProgress size={30} className={classes.progress}/>\r\n                            )}\r\n                            </Button>\r\n                        <br/><small>Already have an account? Login <Link to=\"/login\">here</Link></small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm/>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nsignup.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    logoutUser: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI\r\n})\r\n\r\nexport default connect(mapStateToProps, {signupUser})(withStyles(styles)(signup));\r\n"]},"metadata":{},"sourceType":"module"}