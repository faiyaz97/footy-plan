{"ast":null,"code":"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Tournament from '../components/tournament/Tournament';\nimport StaticProfile from '../components/profile/StaticProfile';\nimport Grid from '@material-ui/core/Grid';\nimport { connect } from 'react-redux';\nimport { getUserData, getTournament } from '../redux/actions/dataActions';\n\nclass tournament extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profile: null\n    };\n  }\n\n  componentDidMount() {\n    const tournamentId = this.props.match.params.tournamentId;\n    this.props.getTournament(tournamentId);\n    axios.get(`/tournament/${tournamentId}`).then(res => {\n      this.setState({\n        profile: res.data.user\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return;\n  }\n\n}\n\nuser.protoTypes = {\n  getUserData: PropTypes.func.isRequired,\n  getTournament: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps, {\n  getUserData,\n  getTournament\n})(tournament);","map":{"version":3,"sources":["C:/Users/Faiyaz/Desktop/ffu/FYP-21/football-tournaments/client-side/src/pages/tournament.js"],"names":["React","Component","PropTypes","axios","Tournament","StaticProfile","Grid","connect","getUserData","getTournament","tournament","state","profile","componentDidMount","tournamentId","props","match","params","get","then","res","setState","data","user","catch","err","console","log","render","protoTypes","func","isRequired","object","mapStateToProps"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,8BAA3C;;AAEA,MAAMC,UAAN,SAAyBT,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BU,KAD+B,GACvB;AACJC,MAAAA,OAAO,EAAE;AADL,KADuB;AAAA;;AAI/BC,EAAAA,iBAAiB,GAAE;AACf,UAAMC,YAAY,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,YAA7C;AACA,SAAKC,KAAL,CAAWN,aAAX,CAAyBK,YAAzB;AACAX,IAAAA,KAAK,CAACe,GAAN,CAAW,eAAcJ,YAAa,EAAtC,EACKK,IADL,CACUC,GAAG,IAAI;AACT,WAAKC,QAAL,CAAc;AACVT,QAAAA,OAAO,EAAEQ,GAAG,CAACE,IAAJ,CAASC;AADR,OAAd;AAGH,KALL,EAMKC,KANL,CAMWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANlB;AAOH;;AACDG,EAAAA,MAAM,GAAG;AACL;AACH;;AAjB8B;;AAoBnCL,IAAI,CAACM,UAAL,GAAkB;AACdrB,EAAAA,WAAW,EAAEN,SAAS,CAAC4B,IAAV,CAAeC,UADd;AAEdtB,EAAAA,aAAa,EAAEP,SAAS,CAAC4B,IAAV,CAAeC,UAFhB;AAGdT,EAAAA,IAAI,EAAEpB,SAAS,CAAC8B,MAAV,CAAiBD;AAHT,CAAlB;;AAMA,MAAME,eAAe,GAAGtB,KAAK,KAAK;AAC9BW,EAAAA,IAAI,EAAEX,KAAK,CAACW;AADkB,CAAL,CAA7B;;AAIA,eAAef,OAAO,CAAC0B,eAAD,EAAkB;AAACzB,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CAAuDC,UAAvD,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport Tournament from '../components/tournament/Tournament';\r\nimport StaticProfile from '../components/profile/StaticProfile';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getUserData, getTournament } from '../redux/actions/dataActions';\r\n\r\nclass tournament extends Component {\r\n    state = {\r\n        profile: null\r\n    }\r\n    componentDidMount(){\r\n        const tournamentId = this.props.match.params.tournamentId;\r\n        this.props.getTournament(tournamentId);\r\n        axios.get(`/tournament/${tournamentId}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    profile: res.data.user\r\n                })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    render() {\r\n        return\r\n    }\r\n}\r\n\r\nuser.protoTypes = {\r\n    getUserData: PropTypes.func.isRequired,\r\n    getTournament: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.data\r\n})\r\n\r\nexport default connect(mapStateToProps, {getUserData, getTournament})(tournament);\r\n"]},"metadata":{},"sourceType":"module"}