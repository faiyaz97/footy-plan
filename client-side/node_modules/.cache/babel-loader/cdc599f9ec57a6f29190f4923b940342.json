{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Faiyaz\\\\Desktop\\\\ffu\\\\FYP-21\\\\football-tournaments\\\\client-side\\\\src\\\\pages\\\\createTournament.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport TournamentDetails from '../components/tournament/TournamentDetails';\nimport TournamentMatches from '../components/tournament/TournamentMatches';\nimport StaticProfile from '../components/profile/StaticProfile';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postTournament, clearErrors } from '../redux/actions/dataActions'; // MUI stuffs\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport MuiLink from '@material-ui/core/Link';\nconst styles = {\n  image: {\n    width: 120,\n    objectFit: 'cover',\n    maxWidth: '100%',\n    borderRadius: '50%'\n  },\n  typography: {\n    flexGrow: 1,\n    align: \"center\"\n  },\n  title: {\n    paddingBottom: \"20px\"\n  }\n};\n\nclass createTournament extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profile: null\n    };\n  }\n\n  componentDidMount() {//const tournamentId = this.props.match.params.tournamentId;\n    //console.log(\"TEST \" + tournamentId);\n    //this.props.getTournament(tournamentId);\n    // axios.get(`/tournament/${tournamentId}`)\n    //      .then(res => {\n    //          this.setState({\n    //              profile: res.data.user\n    //          })\n    //      })\n    //     .catch(err => console.log(err));\n  }\n\n  render() {\n    const {\n      classes,\n      user: {\n        authenticated\n      }\n    } = this.props;\n\n    if (!authenticated) {\n      console.log(\"AUTH: \" + authenticated);\n    }\n\n    const authText = !authenticated ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.container,\n      spacing: 2,\n      direction: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.commentsCard,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: classes.content,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              className: classes.typography,\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [\"You have to \\xA0\", /*#__PURE__*/_jsxDEV(MuiLink, {\n                  component: Link,\n                  to: `/login}`,\n                  variant: \"h6\",\n                  children: \"login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 37\n                }, this), \"\\xA0 to create a Tournament!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 92\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 0,\n      direction: \"row\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.title,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 10,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            color: \"primary\",\n            className: classes.typography,\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Create Tournament\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 97\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), authText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\ncreateTournament.protoTypes = {\n  data: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  postTournament: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data,\n  user: state.user,\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps, {\n  postTournament,\n  clearErrors\n})(withStyles(styles)(createTournament));","map":{"version":3,"sources":["C:/Users/Faiyaz/Desktop/ffu/FYP-21/football-tournaments/client-side/src/pages/createTournament.js"],"names":["React","Component","PropTypes","axios","TournamentDetails","TournamentMatches","StaticProfile","withStyles","Link","connect","postTournament","clearErrors","Card","CardContent","CardMedia","Typography","Grid","MuiLink","styles","image","width","objectFit","maxWidth","borderRadius","typography","flexGrow","align","title","paddingBottom","createTournament","state","profile","componentDidMount","render","classes","user","authenticated","props","console","log","authText","container","commentsCard","content","protoTypes","data","object","isRequired","func","UI","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport TournamentDetails from '../components/tournament/TournamentDetails';\r\nimport TournamentMatches from '../components/tournament/TournamentMatches';\r\nimport StaticProfile from '../components/profile/StaticProfile';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport { postTournament, clearErrors } from '../redux/actions/dataActions';\r\n\r\n// MUI stuffs\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MuiLink from '@material-ui/core/Link';\r\n\r\nconst styles = {\r\n    image: {\r\n        width: 120,\r\n        objectFit: 'cover',\r\n        maxWidth: '100%',\r\n        borderRadius: '50%'\r\n    },\r\n    typography: {\r\n        flexGrow: 1,\r\n        align: \"center\"\r\n      },\r\n    title: {\r\n        paddingBottom: \"20px\"\r\n    }\r\n\r\n}\r\n\r\nclass createTournament extends Component {\r\n    state = {\r\n        profile: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        //const tournamentId = this.props.match.params.tournamentId;\r\n        //console.log(\"TEST \" + tournamentId);\r\n        //this.props.getTournament(tournamentId);\r\n        // axios.get(`/tournament/${tournamentId}`)\r\n        //      .then(res => {\r\n        //          this.setState({\r\n        //              profile: res.data.user\r\n        //          })\r\n        //      })\r\n        //     .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        const { \r\n            classes, \r\n            user: { \r\n                authenticated\r\n            }\r\n        } = this.props;\r\n\r\n        if(!authenticated){\r\n            console.log(\"AUTH: \" + authenticated)\r\n        }\r\n\r\n        const authText = (\r\n            !authenticated ? (\r\n                <Grid container className={classes.container} spacing={2} direction=\"row\" >\r\n                    <Grid item sm={12} xs={12}>\r\n                        <Card className={classes.commentsCard}>\r\n                            <CardContent className={classes.content}>\r\n                                <Typography variant=\"body2\" className={classes.typography}><b>You have to &nbsp;\r\n                                    <MuiLink component={Link} to={`/login}`} variant=\"h6\">\r\n                                         login \r\n                                    </MuiLink> \r\n                                    &nbsp; to create a Tournament!</b>\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            ) : null\r\n        );\r\n        \r\n\r\n        return (\r\n\r\n            \r\n\r\n            <Grid container spacing={0} direction=\"row\" alignItems=\"center\">\r\n                <Grid container className={classes.title}>\r\n                    <Grid item sm={10} xs={12}>\r\n                        <Typography variant=\"h5\" color=\"primary\" className={classes.typography}><b>Create Tournament</b></Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                {authText}\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\ncreateTournament.protoTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n\r\n    user: PropTypes.object.isRequired,\r\n\r\n    postTournament: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.data,\r\n    user: state.user,\r\n\r\n    UI: state.UI\r\n})\r\n\r\nexport default connect(mapStateToProps, {postTournament, clearErrors})(withStyles(styles)(createTournament));\r\n"]},"metadata":{},"sourceType":"module"}