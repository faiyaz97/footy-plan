{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Faiyaz\\\\Desktop\\\\ffu\\\\FYP-21\\\\football-tournaments\\\\client-side\\\\src\\\\components\\\\tournament\\\\CommentForm.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles'; // MUI stuff\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField'; // Redux stuff\n\nimport { connect } from 'react-redux';\nimport { submitComment } from '../../redux/actions/dataActions';\n\nconst styles = theme => ({ ...theme.forms\n});\n\nclass CommentForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      body: '',\n      errors\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.submitComment(this.props.tournamentId, {\n        body: this.state.body\n      });\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      authenticated\n    } = this.props;\n    const errors = this.state.errors;\n    const CommentFormMarkup = authenticated ? /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 12,\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"body\",\n          type: \"text\",\n          label: \"Comment on tournament\",\n          error: errors.comment ? true : false,\n          helperText: errors.comment,\n          value: this.state.body,\n          onChange: this.handleChange,\n          fullWidth: true,\n          className: classes.textField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.button,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: classes.visibleSeperator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this) : null;\n    return CommentFormMarkup;\n  }\n\n}\n\nCommentForm.propTypes = {\n  submitComment: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  tournamentId: PropTypes.string.isRequired,\n  authenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  UI: state.UI,\n  authenticated: state.user.authenticated\n});\n\nexport default connect(mapStateToProps, {\n  submitComment\n})(withStyles(styles)(CommentForm));","map":{"version":3,"sources":["C:/Users/Faiyaz/Desktop/ffu/FYP-21/football-tournaments/client-side/src/components/tournament/CommentForm.js"],"names":["React","Component","Fragment","PropTypes","withStyles","Button","Grid","TextField","connect","submitComment","styles","theme","forms","CommentForm","state","body","errors","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","props","tournamentId","componentWillReceiveProps","nextProps","UI","render","classes","authenticated","CommentFormMarkup","textAlign","comment","textField","button","visibleSeperator","propTypes","func","isRequired","object","string","bool","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\n// MUI stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// Redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { submitComment } from '../../redux/actions/dataActions'\r\n\r\nconst styles = theme => ({\r\n    ...theme.forms\r\n})\r\n\r\n class CommentForm extends Component {\r\n\r\n    state = {\r\n        body: '',\r\n        errors\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.UI.errors){\r\n            this.setState({errors: nextProps.UI.errors})\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.submitComment(this.props.tournamentId, {body: this.state.body});\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes, authenticated } = this.props;\r\n        const errors = this.state.errors;\r\n\r\n        const CommentFormMarkup = authenticated ? (\r\n            <Grid item sm={12} style={{ textAlign: 'center'}}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <TextField\r\n                        name=\"body\"\r\n                        type=\"text\"\r\n                        label=\"Comment on tournament\"\r\n                        error={errors.comment ? true : false}\r\n                        helperText={errors.comment}\r\n                        value={this.state.body}\r\n                        onChange={this.handleChange}\r\n                        fullWidth\r\n                        className={classes.textField}/>\r\n                        <Button \r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}>\r\n                            Submit</Button>\r\n                </form>\r\n                <hr className={classes.visibleSeperator}/>\r\n            </Grid>\r\n        ) : null\r\n        return CommentFormMarkup\r\n    }\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    submitComment: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    tournamentId: PropTypes.string.isRequired,\r\n    authenticated: PropTypes.bool.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    UI: state.UI,\r\n    authenticated: state.user.authenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { submitComment })(withStyles(styles)(CommentForm));\r\n"]},"metadata":{},"sourceType":"module"}