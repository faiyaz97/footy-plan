{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Faiyaz\\\\Desktop\\\\ffu\\\\FYP-21\\\\football-tournaments\\\\client-side\\\\src\\\\pages\\\\createTournament.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport TournamentDetails from '../components/tournament/TournamentDetails';\nimport TournamentMatches from '../components/tournament/TournamentMatches';\nimport StaticProfile from '../components/profile/StaticProfile';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { postTournament, clearErrors } from '../redux/actions/dataActions'; // MUI stuffs\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport MuiLink from '@material-ui/core/Link';\nconst styles = {\n  image: {\n    width: 120,\n    objectFit: 'cover',\n    maxWidth: '100%',\n    borderRadius: '50%'\n  },\n  typography: {\n    flexGrow: 1,\n    align: \"center\"\n  },\n  title: {\n    paddingBottom: \"20px\"\n  }\n};\n\nclass createTournament extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      name: '',\n      errors: {}\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.props.clearErrors();\n      this.setState({\n        open: false,\n        errors: {}\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.postTournament({\n        name: this.state.name\n      });\n    };\n\n    this.state = {\n      profile: null\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\n      this.setState({\n        name: '',\n        open: false,\n        errors: {}\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      user: {\n        authenticated\n      }\n    } = this.props;\n\n    if (!authenticated) {\n      console.log(\"AUTH: \" + authenticated);\n    }\n\n    const authText = !authenticated ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.container,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.commentsCard,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: classes.content,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              className: classes.typography,\n              children: [\"You have to\\xA0\", /*#__PURE__*/_jsxDEV(MuiLink, {\n                component: Link,\n                to: `/login}`,\n                variant: \"body1\",\n                children: \"login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }, this), \"\\xA0to create a Tournament!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.container,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.commentsCard,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: classes.content,\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                name: \"name\",\n                type: \"text\",\n                label: \"Tournament name\",\n                multiline: true,\n                rows: \"3\",\n                placeholder: \"tournament name\",\n                error: errors.name ? true : false,\n                helperText: errors.name,\n                className: classes.textField,\n                onChange: this.handleChange,\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                className: classes.submitButton,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 0,\n      direction: \"row\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.title,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 10,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            color: \"primary\",\n            className: classes.typography,\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Create Tournament\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 97\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), authText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\ncreateTournament.protoTypes = {\n  data: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  postTournament: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data,\n  user: state.user,\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps, {\n  postTournament,\n  clearErrors\n})(withStyles(styles)(createTournament));","map":{"version":3,"sources":["C:/Users/Faiyaz/Desktop/ffu/FYP-21/football-tournaments/client-side/src/pages/createTournament.js"],"names":["React","Component","PropTypes","axios","TournamentDetails","TournamentMatches","StaticProfile","withStyles","Link","TextField","Button","connect","postTournament","clearErrors","Card","CardContent","CardMedia","Typography","Grid","MuiLink","styles","image","width","objectFit","maxWidth","borderRadius","typography","flexGrow","align","title","paddingBottom","createTournament","state","open","name","errors","handleOpen","setState","handleClose","props","handleChange","event","target","value","handleSubmit","preventDefault","profile","componentWillReceiveProps","nextProps","UI","loading","render","classes","user","authenticated","console","log","authText","container","commentsCard","content","textField","submitButton","protoTypes","data","object","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport TournamentDetails from '../components/tournament/TournamentDetails';\r\nimport TournamentMatches from '../components/tournament/TournamentMatches';\r\nimport StaticProfile from '../components/profile/StaticProfile';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Link } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport { postTournament, clearErrors } from '../redux/actions/dataActions';\r\n\r\n// MUI stuffs\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MuiLink from '@material-ui/core/Link';\r\n\r\nconst styles = {\r\n    image: {\r\n        width: 120,\r\n        objectFit: 'cover',\r\n        maxWidth: '100%',\r\n        borderRadius: '50%'\r\n    },\r\n    typography: {\r\n        flexGrow: 1,\r\n        align: \"center\"\r\n      },\r\n    title: {\r\n        paddingBottom: \"20px\"\r\n    }\r\n\r\n}\r\n\r\nclass createTournament extends Component {\r\n\r\n    state = {\r\n        open: false,\r\n        name: '',\r\n        errors: {}\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.UI.errors){\r\n            this.setState({\r\n                errors: nextProps.UI.errors\r\n            });\r\n        }\r\n        if (!nextProps.UI.errors && !nextProps.UI.loading) {\r\n            this.setState({ name: '', open: false, errors: {} });\r\n        }\r\n    \r\n    }\r\n    handleOpen = () => {\r\n        this.setState({ open: true })\r\n    };\r\n    handleClose = () => {\r\n        this.props.clearErrors();\r\n        this.setState({ open: false, errors: {} })\r\n    };\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value })\r\n    };\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.postTournament({ name: this.state.name });\r\n    };\r\n    state = {\r\n        profile: null\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        const { \r\n            classes, \r\n            user: { \r\n                authenticated\r\n            }\r\n        } = this.props;\r\n\r\n        if(!authenticated){\r\n            console.log(\"AUTH: \" + authenticated)\r\n        }\r\n\r\n        const authText = (\r\n            !authenticated ? (\r\n                <Grid container className={classes.container} justify=\"center\">\r\n                    <Grid item  xs='auto'>\r\n                        <Card className={classes.commentsCard}>\r\n                            <CardContent className={classes.content}>\r\n                                <Typography variant=\"body1\" className={classes.typography}>You have to&nbsp;\r\n                                    <MuiLink component={Link} to={`/login}`} variant=\"body1\">\r\n                                         login \r\n                                    </MuiLink> \r\n                                    &nbsp;to create a Tournament!\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            ) : (\r\n                <Grid container className={classes.container} justify=\"center\">\r\n                    <Grid item  xs='auto'>\r\n                        <Card className={classes.commentsCard}>\r\n                            <CardContent className={classes.content}>\r\n                                <form onSubmit={this.handleSubmit}>\r\n                                <TextField \r\n                                    name=\"name\" \r\n                                    type=\"text\" \r\n                                    label=\"Tournament name\" \r\n                                    multiline \r\n                                    rows=\"3\" \r\n                                    placeholder=\"tournament name\" \r\n                                    error={errors.name ? true : false} \r\n                                    helperText={errors.name} \r\n                                    className={classes.textField}\r\n                                    onChange={this.handleChange}\r\n                                    fullWidth\r\n                                    />\r\n                                    <Button type=\"submit\" variant=\"contained\" color=\"primary\"\r\n                                        className={classes.submitButton}>\r\n                                            Submit\r\n                                    </Button>\r\n                                </form>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        );\r\n        \r\n\r\n        return (\r\n\r\n            \r\n\r\n            <Grid container spacing={0} direction=\"row\" alignItems=\"center\">\r\n                <Grid container className={classes.title}>\r\n                    <Grid item sm={10} xs={12}>\r\n                        <Typography variant=\"h5\" color=\"primary\" className={classes.typography}><b>Create Tournament</b></Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                {authText}\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\ncreateTournament.protoTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n\r\n    user: PropTypes.object.isRequired,\r\n\r\n    postTournament: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.data,\r\n    user: state.user,\r\n\r\n    UI: state.UI\r\n})\r\n\r\nexport default connect(mapStateToProps, {postTournament, clearErrors})(withStyles(styles)(createTournament));\r\n"]},"metadata":{},"sourceType":"module"}