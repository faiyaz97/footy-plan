{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Faiyaz\\\\Desktop\\\\ffu\\\\FYP-21\\\\football-tournaments\\\\client-side\\\\src\\\\pages\\\\tournament.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Tournament from '../components/tournament/Tournament';\nimport StaticProfile from '../components/profile/StaticProfile';\nimport { connect } from 'react-redux';\nimport { getUserData, getTournament } from '../redux/actions/dataActions'; // MUI stuffs\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nconst styles = {\n  card: {\n    position: 'relative',\n    display: 'flex',\n    marginBottom: 20\n  },\n  image: {\n    minWidth: 200,\n    objectFit: 'cover'\n  },\n  content: {\n    padding: 25\n  }\n};\n\nclass tournament extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profile: null\n    };\n  }\n\n  componentDidMount() {\n    const tournamentId = this.props.match.params.tournamentId;\n    console.log(\"TEST \" + tournamentId);\n    this.props.getTournament(tournamentId); // axios.get(`/tournament/${tournamentId}`)\n    //      .then(res => {\n    //          this.setState({\n    //              profile: res.data.user\n    //          })\n    //      })\n    //     .catch(err => console.log(err));\n  }\n\n  render() {\n    const {\n      tournament\n    } = this.props.data;\n    const {\n      classes\n    } = this.props;\n    console.log(\"TOURN? \" + tournament.matches[1].t1);\n\n    /*#__PURE__*/\n    _jsxDEV(Card, {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        className: classes.image,\n        image: tournament.userImage,\n        title: \"Profile image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          color: \"primary\",\n          children: tournament.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this);\n\n    return null;\n  }\n\n}\n\ntournament.protoTypes = {\n  getUserData: PropTypes.func.isRequired,\n  getTournament: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps, {\n  getUserData,\n  getTournament\n})(withStyles(styles)(tournament));","map":{"version":3,"sources":["C:/Users/Faiyaz/Desktop/ffu/FYP-21/football-tournaments/client-side/src/pages/tournament.js"],"names":["React","Component","PropTypes","axios","Tournament","StaticProfile","connect","getUserData","getTournament","Card","CardContent","CardMedia","Typography","Grid","styles","card","position","display","marginBottom","image","minWidth","objectFit","content","padding","tournament","state","profile","componentDidMount","tournamentId","props","match","params","console","log","render","data","classes","matches","t1","userImage","name","protoTypes","func","isRequired","object","mapStateToProps","withStyles"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport Tournament from '../components/tournament/Tournament';\r\nimport StaticProfile from '../components/profile/StaticProfile';\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getUserData, getTournament } from '../redux/actions/dataActions';\r\n\r\n// MUI stuffs\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = {\r\n    card: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        marginBottom: 20\r\n    },\r\n    image: {\r\n        minWidth: 200,\r\n        objectFit: 'cover'\r\n    },\r\n    content: {\r\n        padding: 25\r\n    }\r\n}\r\n\r\nclass tournament extends Component {\r\n    state = {\r\n        profile: null\r\n    }\r\n    componentDidMount(){\r\n        const tournamentId = this.props.match.params.tournamentId;\r\n        console.log(\"TEST \" + tournamentId);\r\n        this.props.getTournament(tournamentId);\r\n        // axios.get(`/tournament/${tournamentId}`)\r\n        //      .then(res => {\r\n        //          this.setState({\r\n        //              profile: res.data.user\r\n        //          })\r\n        //      })\r\n        //     .catch(err => console.log(err));\r\n    }\r\n    render() {\r\n        const { tournament } = this.props.data;\r\n\r\n        const { classes } = this.props;\r\n\r\n        console.log(\"TOURN? \" + tournament.matches[1].t1);\r\n\r\n        <Card className={classes.card}>\r\n            <CardMedia className={classes.image} image={tournament.userImage} title=\"Profile image\"/>\r\n            <CardContent className={classes.content}>\r\n                <Typography variant=\"h5\" color=\"primary\">\r\n                    {tournament.name}\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n\r\n        return null\r\n    }\r\n}\r\n\r\ntournament.protoTypes = {\r\n    getUserData: PropTypes.func.isRequired,\r\n    getTournament: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.data\r\n})\r\n\r\nexport default connect(mapStateToProps, {getUserData, getTournament})(withStyles(styles)(tournament));\r\n"]},"metadata":{},"sourceType":"module"}