{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Faiyaz\\\\Desktop\\\\ffu\\\\FYP-21\\\\football-tournaments\\\\client-side\\\\src\\\\components\\\\tournament\\\\TournamentTable.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport MyButton from '../../utility/MyButton';\nimport DeleteTournament from './DeleteTournament';\nimport TournamentDialog from './TournamentDialog'; // MUI stuffs\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { connect } from 'react-redux';\nimport { deleteTournament } from '../../redux/actions/dataActions';\nconst styles = {};\nconst columns = [{\n  field: 'tournamentName',\n  headerName: 'Tournament Name',\n  width: 130\n}, {\n  field: 'teamsN',\n  headerName: 'Teams #',\n  type: 'number',\n  width: 90\n}, {\n  field: 'type',\n  headerName: 'Type',\n  width: 130\n}, {\n  field: 'format',\n  headerName: 'Format',\n  width: 130\n}, {\n  field: 'location',\n  headerName: 'Location',\n  width: 130\n}, {\n  field: 'description',\n  headerName: 'Description',\n  width: 130\n}, {\n  field: 'date',\n  headerName: 'Start Date',\n  width: 130\n} // {\n//   field: 'fullName',\n//   headerName: 'Full name',\n//   description: 'This column has a value getter and is not sortable.',\n//   sortable: false,\n//   width: 160,\n//   valueGetter: (params) =>\n//     `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\n// },\n];\nconst rows = [{\n  tournamentName: \"table1\",\n  teamsN: 4,\n  type: '5-A-Side',\n  format: \"Single Elimination\",\n  location: \"1-3 shresbury road, e78aj\",\n  description: \"test ste ts t set st s tes t st st st ste t s test es st \",\n  date: \"12/08/2022\"\n}];\n\nclass TournamentTable extends Component {\n  render() {\n    dayjs.extend(relativeTime);\n    console.log(\"TEST2: \" + JSON.stringify(this.props.tournaments));\n    const tournaments = this.props.tournaments;\n    const row = {\n      tournamentName: \"\",\n      teamsN: 0,\n      type: \"\",\n      format: \"\",\n      location: \"\",\n      description: \"\",\n      date: \"\"\n    };\n    tournaments.map(tournament => {\n      row.tournamentName = tournament.name;\n      row.teamsN = tournament.teamsN;\n      row.type = tournament.type;\n      row.format = tournament.format;\n      row.location = tournament.location;\n      row.description = tournament.description;\n      row.date = tournament.date;\n      rows.push(row);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        pageSize: 5,\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nTournamentTable.propTypes = {\n  user: PropTypes.object.isRequired,\n  tournament: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapActionsToProps = {};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(TournamentTable));","map":{"version":3,"sources":["C:/Users/Faiyaz/Desktop/ffu/FYP-21/football-tournaments/client-side/src/components/tournament/TournamentTable.js"],"names":["React","Component","withStyles","PropTypes","Link","dayjs","relativeTime","MyButton","DeleteTournament","TournamentDialog","Card","CardContent","CardMedia","Typography","DataGrid","connect","deleteTournament","styles","columns","field","headerName","width","type","rows","tournamentName","teamsN","format","location","description","date","TournamentTable","render","extend","console","log","JSON","stringify","props","tournaments","row","map","tournament","name","push","height","propTypes","user","object","isRequired","classes","mapStateToProps","state","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport MyButton from '../../utility/MyButton';\r\nimport DeleteTournament from './DeleteTournament';\r\nimport TournamentDialog from './TournamentDialog';\r\n\r\n// MUI stuffs\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\n\r\nimport { connect } from 'react-redux' ;\r\nimport { deleteTournament } from '../../redux/actions/dataActions';\r\n\r\n\r\nconst styles = {\r\n    \r\n}\r\n\r\nconst columns = [\r\n    { field: 'tournamentName', headerName: 'Tournament Name', width: 130 },\r\n    { field: 'teamsN', headerName: 'Teams #', type: 'number', width: 90, },\r\n    { field: 'type', headerName: 'Type', width: 130 },\r\n    { field: 'format', headerName: 'Format', width: 130 },\r\n    { field: 'location', headerName: 'Location', width: 130 },\r\n    { field: 'description', headerName: 'Description', width: 130 },\r\n    { field: 'date', headerName: 'Start Date', width: 130 },\r\n\r\n    // {\r\n    //   field: 'fullName',\r\n    //   headerName: 'Full name',\r\n    //   description: 'This column has a value getter and is not sortable.',\r\n    //   sortable: false,\r\n    //   width: 160,\r\n    //   valueGetter: (params) =>\r\n    //     `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\r\n    // },\r\n];\r\n  \r\nconst rows = [\r\n    { tournamentName: \"table1\", teamsN: 4, type: '5-A-Side', format: \"Single Elimination\", location: \"1-3 shresbury road, e78aj\", description: \"test ste ts t set st s tes t st st st ste t s test es st \", date: \"12/08/2022\" }\r\n];\r\n\r\nclass TournamentTable extends Component {\r\n\r\n\r\n    render() {\r\n        dayjs.extend(relativeTime);\r\n        console.log(\"TEST2: \" + JSON.stringify(this.props.tournaments));\r\n\r\n        const tournaments = this.props.tournaments;\r\n\r\n        const row = { tournamentName: \"\", teamsN: 0, type: \"\", format: \"\", location: \"\", description: \"\", date: \"\" }\r\n\r\n\r\n        tournaments.map((tournament) => {\r\n            row.tournamentName = tournament.name;\r\n            row.teamsN = tournament.teamsN;\r\n            row.type = tournament.type;\r\n            row.format = tournament.format;\r\n            row.location = tournament.location;\r\n            row.description = tournament.description;\r\n            row.date = tournament.date;\r\n\r\n            rows.push(row);\r\n\r\n        })\r\n\r\n        \r\n        return (\r\n            <div style={{ height: 400, width: '100%' }}>\r\n              <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nTournamentTable.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    tournament: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n})\r\n\r\nconst mapActionsToProps = {\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(TournamentTable));\r\n"]},"metadata":{},"sourceType":"module"}