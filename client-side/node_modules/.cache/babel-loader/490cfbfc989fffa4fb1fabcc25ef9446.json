{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Faiyaz\\\\Desktop\\\\ffu\\\\FYP-21\\\\football-tournaments\\\\client-side\\\\src\\\\components\\\\tournament\\\\TournamentMatches.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport MyButton from '../../utility/MyButton';\nimport DeleteTournament from './DeleteTournament';\nimport TournamentDialog from './TournamentDialog';\nimport StaticProfile from '../../components/profile/StaticProfile';\nimport axios from 'axios';\nimport Comments from './Comments';\nimport CommentForm from './CommentForm';\nimport Button from '@material-ui/core/Button';\nimport DisplayRound from '../tournament/DisplayRound'; // MUI stuffs\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { connect } from 'react-redux';\nimport { getUserData } from '../../redux/actions/dataActions';\nimport { CardActions } from '@material-ui/core';\nconst styles = {\n  grid: {},\n  card: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: \"row\"\n  },\n  commentsCard: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: \"column\"\n  },\n  paper: {\n    maxHeight: 300,\n    overflow: 'auto'\n  },\n  image: {\n    minWidth: 200,\n    objectFit: 'cover'\n  },\n  content: {},\n  typography: {\n    paddingBottom: 10\n  },\n  teamCard: {\n    position: 'relative',\n    display: 'flex',\n    marginBottom: -10,\n    alignItems: 'center',\n    padding: \"0px 20px 0px 20px\"\n  },\n  teamsImage: {\n    width: 50,\n    height: 50,\n    objectFit: 'cover',\n    borderRadius: '50%'\n  },\n  teamContent: {\n    padding: 20\n  },\n  secondNav: {\n    paddingBottom: \"20px\"\n  },\n  container: {\n    paddingBottom: \"20px\"\n  }\n};\n\nclass TournamentMatches extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profile: null\n    };\n  }\n\n  render() {\n    const {\n      profile\n    } = this.state;\n\n    if (profile === null) {\n      const handle = this.props.tournament.userHandle;\n      this.props.getUserData(handle);\n      axios.get(`/user/${handle}`).then(res => {\n        this.setState({\n          profile: res.data.user\n        });\n      }).catch(err => console.log(err));\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 20\n      }, this);\n    }\n\n    console.log(\"MATCH: \" + this.props.tournament.matches);\n    const matches = this.props.tournament.matches;\n    const final = [];\n    const semifinal = [];\n    const quarterfinal = [];\n    const eightfinal = [];\n    const final16 = [];\n    const final32 = [];\n    matches.map(match => {\n      if (match.round === \"final\") {\n        final.push(match);\n      }\n\n      if (match.round === \"\") {\n        semifinal.push(match);\n      }\n\n      if (match.round === \"quarterfinal\") {\n        quarterfinal.push(match);\n      }\n\n      console.log(semifinal);\n    });\n    const finalView = final !== null ? /*#__PURE__*/_jsxDEV(DisplayRound, {\n      round: final\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this) : null;\n    const semifinalView = semifinal !== null ? /*#__PURE__*/_jsxDEV(DisplayRound, {\n      round: semifinal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this) : null;\n    const quarterfinalView = quarterfinal !== null ? /*#__PURE__*/_jsxDEV(DisplayRound, {\n      round: quarterfinal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this) : null;\n    dayjs.extend(relativeTime);\n    const {\n      classes,\n      tournament: {\n        name,\n        createdAt,\n        userImage,\n        userHandle,\n        tournamentId,\n        commentCount,\n        teamsN,\n        type,\n        format,\n        location,\n        description,\n        comments,\n        teams\n      },\n      user: {\n        authenticated,\n        credentials: {\n          handle\n        }\n      }\n    } = this.props;\n    let teamsMarkup = teams.map(team => /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.teamCard,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: team.teamLogo,\n        height: true,\n        className: classes.teamsImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.teamContent,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: team.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.grid,\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.secondNav,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            component: Link,\n            to: `/tournaments/details/${tournamentId}`,\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            component: Link,\n            to: `/tournaments/matches/${tournamentId}`,\n            children: \"Matches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            children: \"Player stats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.container,\n        spacing: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 12,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            color: \"primary\",\n            className: classes.typography,\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Rounds\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 97\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), finalView, semifinalView, quarterfinalView]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nTournamentMatches.propTypes = {\n  user: PropTypes.object.isRequired,\n  tournament: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  getUserData: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapActionsToProps = {};\nexport default connect(mapStateToProps, {\n  getUserData\n})(withStyles(styles)(TournamentMatches));","map":{"version":3,"sources":["C:/Users/Faiyaz/Desktop/ffu/FYP-21/football-tournaments/client-side/src/components/tournament/TournamentMatches.js"],"names":["React","Component","withStyles","PropTypes","Link","dayjs","relativeTime","MyButton","DeleteTournament","TournamentDialog","StaticProfile","axios","Comments","CommentForm","Button","DisplayRound","Card","CardContent","CardMedia","Typography","Grid","Paper","connect","getUserData","CardActions","styles","grid","card","position","display","flexDirection","commentsCard","paper","maxHeight","overflow","image","minWidth","objectFit","content","typography","paddingBottom","teamCard","marginBottom","alignItems","padding","teamsImage","width","height","borderRadius","teamContent","secondNav","container","TournamentMatches","state","profile","render","handle","props","tournament","userHandle","get","then","res","setState","data","user","catch","err","console","log","matches","final","semifinal","quarterfinal","eightfinal","final16","final32","map","match","round","push","finalView","semifinalView","quarterfinalView","extend","classes","name","createdAt","userImage","tournamentId","commentCount","teamsN","type","format","location","description","comments","teams","authenticated","credentials","teamsMarkup","team","teamLogo","propTypes","object","isRequired","func","mapStateToProps","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport MyButton from '../../utility/MyButton';\r\nimport DeleteTournament from './DeleteTournament';\r\nimport TournamentDialog from './TournamentDialog';\r\nimport StaticProfile from '../../components/profile/StaticProfile';\r\nimport axios from 'axios';\r\nimport Comments from './Comments';\r\nimport CommentForm from './CommentForm';\r\nimport Button from '@material-ui/core/Button';\r\nimport DisplayRound from '../tournament/DisplayRound';\r\n\r\n// MUI stuffs\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nimport { connect } from 'react-redux' ;\r\nimport { getUserData } from '../../redux/actions/dataActions';\r\nimport { CardActions } from '@material-ui/core';\r\n\r\n\r\nconst styles = {\r\n    grid:{\r\n        \r\n    },\r\n    card: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        flexDirection: \"row\"\r\n    },\r\n    commentsCard: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        flexDirection: \"column\"\r\n    },\r\n    paper: {\r\n        maxHeight: 300, \r\n        overflow: 'auto'\r\n    },\r\n    image: {\r\n        minWidth: 200,\r\n        objectFit: 'cover'\r\n    },\r\n    content: {\r\n        \r\n    },\r\n\r\n    typography: {\r\n        paddingBottom: 10\r\n    },\r\n\r\n\r\n    teamCard: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        marginBottom: -10,\r\n        alignItems: 'center',\r\n        padding: \"0px 20px 0px 20px\"\r\n    },\r\n    teamsImage: {\r\n        width: 50,\r\n        height: 50,\r\n        objectFit: 'cover',\r\n        borderRadius: '50%',\r\n    },\r\n    teamContent: {\r\n        padding: 20,\r\n\r\n    },\r\n    secondNav: {\r\n        paddingBottom: \"20px\"\r\n    },\r\n    container: {\r\n        paddingBottom: \"20px\"\r\n    }\r\n\r\n}\r\n\r\nclass TournamentMatches extends Component {\r\n\r\n    state = {\r\n        profile: null\r\n    }\r\n\r\n    render() {\r\n\r\n        const { profile } = this.state;\r\n\r\n        if (profile === null) {\r\n            const handle = this.props.tournament.userHandle;\r\n            \r\n            this.props.getUserData(handle);\r\n            axios.get(`/user/${handle}`)\r\n                .then(res => {\r\n                    this.setState({\r\n                        profile: res.data.user\r\n                    })\r\n                })\r\n                .catch(err => console.log(err));\r\n            return <p>Loading...</p>\r\n        }\r\n\r\n        console.log(\"MATCH: \" + this.props.tournament.matches);\r\n\r\n        const matches = this.props.tournament.matches;\r\n\r\n        const final = [];\r\n        const semifinal = [];\r\n        const quarterfinal = [];\r\n        const eightfinal = [];\r\n        const final16 = [];\r\n        const final32 = [];\r\n\r\n        matches.map((match) => {\r\n            if(match.round === \"final\"){\r\n                final.push(match)\r\n            }\r\n\r\n            if(match.round === \"\"){\r\n                semifinal.push(match)\r\n            }\r\n\r\n            if(match.round === \"quarterfinal\"){\r\n                quarterfinal.push(match)\r\n            }\r\n            console.log(semifinal)\r\n        })\r\n\r\n        const finalView = final !== null ? (\r\n            <DisplayRound round={final} />\r\n        ) : null\r\n\r\n        const semifinalView = semifinal !== null ? (\r\n            <DisplayRound round={semifinal} />\r\n        ) : null\r\n\r\n        const quarterfinalView = quarterfinal !== null ? (\r\n            <DisplayRound round={quarterfinal} />\r\n        ) : null\r\n        \r\n        dayjs.extend(relativeTime);\r\n        const { classes,\r\n             tournament: { \r\n                 name, createdAt, userImage, userHandle, tournamentId, commentCount, teamsN, type, format, location, description, comments, teams\r\n                },\r\n            user: { \r\n                authenticated, credentials: { handle }\r\n            } \r\n        } = this.props;\r\n\r\n\r\n\r\n        let teamsMarkup = (\r\n            teams.map((team) => \r\n            <Card className={classes.teamCard}>\r\n                <img src={team.teamLogo} height className={classes.teamsImage}/>\r\n                <CardContent className={classes.teamContent}>\r\n                    <Typography variant=\"h6\">\r\n                        {team.name}\r\n                    </Typography>\r\n                </CardContent>  \r\n            </Card>\r\n            )\r\n        )\r\n        \r\n        return (\r\n            \r\n\r\n            <Grid container className={classes.grid} direction=\"row\" >\r\n\r\n                <Grid container className={classes.secondNav} spacing={2} >\r\n                    <Grid item >\r\n                        <Button variant=\"outlined\" color=\"primary\" component={Link} to={`/tournaments/details/${tournamentId}`}>Details</Button>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Button variant=\"contained\" color=\"primary\" component={Link} to={`/tournaments/matches/${tournamentId}`}>Matches</Button>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Button variant=\"outlined\" color=\"primary\">Player stats</Button>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Button variant=\"outlined\" color=\"primary\">Settings</Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container className={classes.container} spacing={2} >\r\n\r\n                    <Grid item sm={12} xs={12}>\r\n                        <Typography variant=\"h5\" color=\"primary\" className={classes.typography}><b>Rounds</b></Typography>\r\n                    \r\n                        {finalView}\r\n                        {semifinalView}\r\n                        {quarterfinalView}\r\n\r\n                    </Grid>\r\n\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nTournamentMatches.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    tournament: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    getUserData: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n})\r\n\r\nconst mapActionsToProps = {\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, {getUserData})(withStyles(styles)(TournamentMatches));\r\n"]},"metadata":{},"sourceType":"module"}