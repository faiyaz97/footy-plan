{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Faiyaz\\\\Desktop\\\\ffu\\\\FYP-21\\\\football-tournaments\\\\client-side\\\\src\\\\pages\\\\createTournament.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport TournamentDetails from '../components/tournament/TournamentDetails';\nimport TournamentMatches from '../components/tournament/TournamentMatches';\nimport StaticProfile from '../components/profile/StaticProfile';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { postTournament, clearErrors } from '../redux/actions/dataActions'; // MUI stuffs\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport MuiLink from '@material-ui/core/Link';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nconst styles = {\n  image: {\n    width: 120,\n    objectFit: 'cover',\n    maxWidth: '100%',\n    borderRadius: '50%'\n  },\n  typography: {\n    flexGrow: 1,\n    align: \"center\"\n  },\n  title: {\n    paddingBottom: \"20px\"\n  }\n};\n\nclass createTournament extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      name: '',\n      errors: {}\n    };\n\n    this.handleChange = event => {\n      this.props.clearErrors();\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.postTournament({\n        name: this.state.name\n      });\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\n      this.setState({\n        name: '',\n        open: false,\n        errors: {}\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    const [age, setAge] = React.useState('');\n    const {\n      classes,\n      user: {\n        authenticated\n      }\n    } = this.props;\n\n    if (!authenticated) {\n      console.log(\"AUTH: \" + authenticated);\n    }\n\n    const authText = !authenticated ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              className: classes.typography,\n              children: [\"You have to\\xA0\", /*#__PURE__*/_jsxDEV(MuiLink, {\n                component: Link,\n                to: `/login`,\n                variant: \"body1\",\n                children: \"login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 37\n              }, this), \"\\xA0to create a Tournament!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sm: 6,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"name\",\n                    type: \"text\",\n                    label: \"Tournament name\",\n                    multiline: true,\n                    rows: \"3\",\n                    placeholder: \"tournament name\",\n                    error: errors.name ? true : false,\n                    helperText: errors.name,\n                    className: classes.textField,\n                    onChange: this.handleChange,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"location\",\n                    type: \"text\",\n                    label: \"Location\",\n                    multiline: true,\n                    rows: \"3\",\n                    placeholder: \"tournament location\",\n                    error: errors.name ? true : false,\n                    helperText: errors.name,\n                    className: classes.textField,\n                    onChange: this.handleChange,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"format\",\n                    type: \"text\",\n                    label: \"Format\",\n                    multiline: true,\n                    rows: \"3\",\n                    placeholder: \"tournament format\",\n                    error: errors.name ? true : false,\n                    helperText: errors.name,\n                    className: classes.textField,\n                    onChange: this.handleChange,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"description\",\n                    type: \"text\",\n                    label: \"Description\",\n                    multiline: true,\n                    rows: \"5\",\n                    placeholder: \"tournament description\",\n                    error: errors.name ? true : false,\n                    helperText: errors.name,\n                    className: classes.textField,\n                    onChange: this.handleChange,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sm: 6,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"demo-simple-select-label\",\n                    children: \"Age\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: \"demo-simple-select-label\",\n                    id: \"demo-simple-select\",\n                    value: age,\n                    onChange: this.handleChange,\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 4,\n                      children: \"4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 8,\n                      children: \"8\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 16,\n                      children: \"16\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 16,\n                      children: \"32\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"teamsN\",\n                    type: \"text\",\n                    label: \"Teams #\",\n                    multiline: true,\n                    rows: \"3\",\n                    placeholder: \"tournament teams number\",\n                    error: errors.name ? true : false,\n                    helperText: errors.name,\n                    className: classes.textField,\n                    onChange: this.handleChange,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"type\",\n                    type: \"text\",\n                    label: \"Type\",\n                    multiline: true,\n                    rows: \"3\",\n                    placeholder: \"tournament type\",\n                    error: errors.name ? true : false,\n                    helperText: errors.name,\n                    className: classes.textField,\n                    onChange: this.handleChange,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"date\",\n                    type: \"text\",\n                    label: \"Date\",\n                    multiline: true,\n                    rows: \"3\",\n                    placeholder: \"tournament date\",\n                    error: errors.name ? true : false,\n                    helperText: errors.name,\n                    className: classes.textField,\n                    onChange: this.handleChange,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submitButton,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 0,\n      direction: \"row\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.title,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 10,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            color: \"primary\",\n            className: classes.typography,\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Create Tournament\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 97\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), authText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\ncreateTournament.protoTypes = {\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  postTournament: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps, {\n  postTournament,\n  clearErrors\n})(withStyles(styles)(createTournament));","map":{"version":3,"sources":["C:/Users/Faiyaz/Desktop/ffu/FYP-21/football-tournaments/client-side/src/pages/createTournament.js"],"names":["React","Component","PropTypes","axios","TournamentDetails","TournamentMatches","StaticProfile","withStyles","Link","TextField","Button","connect","postTournament","clearErrors","Card","CardContent","CardMedia","Typography","Grid","MuiLink","InputLabel","MenuItem","FormHelperText","FormControl","Select","styles","image","width","objectFit","maxWidth","borderRadius","typography","flexGrow","align","title","paddingBottom","createTournament","state","open","name","errors","handleChange","event","props","setState","target","value","handleSubmit","preventDefault","componentWillReceiveProps","nextProps","UI","loading","render","age","setAge","useState","classes","user","authenticated","console","log","authText","textField","submitButton","protoTypes","object","isRequired","func","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,4CAA9B;AACA,OAAOC,iBAAP,MAA8B,4CAA9B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAIA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,8BAA5C,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE,GADJ;AAEHC,IAAAA,SAAS,EAAE,OAFR;AAGHC,IAAAA,QAAQ,EAAE,MAHP;AAIHC,IAAAA,YAAY,EAAE;AAJX,GADI;AAOXC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAE,CADF;AAERC,IAAAA,KAAK,EAAE;AAFC,GAPD;AAWXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,aAAa,EAAE;AADZ;AAXI,CAAf;;AAiBA,MAAMC,gBAAN,SAA+BnC,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAErCoC,KAFqC,GAE7B;AACJC,MAAAA,IAAI,EAAE,KADF;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,MAAM,EAAE;AAHJ,KAF6B;;AAAA,SAoBrCC,YApBqC,GAoBrBC,KAAD,IAAW;AACtB,WAAKC,KAAL,CAAW9B,WAAX;AACA,WAAK+B,QAAL,CAAc;AAAE,SAACF,KAAK,CAACG,MAAN,CAAaN,IAAd,GAAqBG,KAAK,CAACG,MAAN,CAAaC;AAApC,OAAd;AACH,KAvBoC;;AAAA,SAwBrCC,YAxBqC,GAwBrBL,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACM,cAAN;AACA,WAAKL,KAAL,CAAW/B,cAAX,CAA0B;AAAE2B,QAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE;AAAnB,OAA1B;AACH,KA3BoC;AAAA;;AAQrCU,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAChC,QAAGA,SAAS,CAACC,EAAV,CAAaX,MAAhB,EAAuB;AACnB,WAAKI,QAAL,CAAc;AACVJ,QAAAA,MAAM,EAAEU,SAAS,CAACC,EAAV,CAAaX;AADX,OAAd;AAGH;;AACD,QAAI,CAACU,SAAS,CAACC,EAAV,CAAaX,MAAd,IAAwB,CAACU,SAAS,CAACC,EAAV,CAAaC,OAA1C,EAAmD;AAC/C,WAAKR,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAE,EAAR;AAAYD,QAAAA,IAAI,EAAE,KAAlB;AAAyBE,QAAAA,MAAM,EAAE;AAAjC,OAAd;AACH;AAEJ;;AAWDa,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEb,MAAAA;AAAF,QAAa,KAAKH,KAAxB;AACA,UAAM,CAACiB,GAAD,EAAMC,MAAN,IAAgBvD,KAAK,CAACwD,QAAN,CAAe,EAAf,CAAtB;AACA,UAAM;AACFC,MAAAA,OADE;AAEFC,MAAAA,IAAI,EAAE;AACFC,QAAAA;AADE;AAFJ,QAKF,KAAKhB,KALT;;AAOA,QAAG,CAACgB,aAAJ,EAAkB;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWF,aAAvB;AACH;;AAED,UAAMG,QAAQ,GACV,CAACH,aAAD,gBACI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAiB,MAAA,OAAO,EAAC,QAAzB;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAY,QAAA,EAAE,EAAC,MAAf;AAAA,+BACI,QAAC,IAAD;AAAA,iCACI,QAAC,WAAD;AAAA,mCACI,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,OAApB;AAA4B,cAAA,SAAS,EAAEF,OAAO,CAAC1B,UAA/C;AAAA,yDACI,QAAC,OAAD;AAAS,gBAAA,SAAS,EAAEvB,IAApB;AAA0B,gBAAA,EAAE,EAAG,QAA/B;AAAwC,gBAAA,OAAO,EAAC,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,gBAgBI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,KAA1B;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAAA,+BACI;AAAM,UAAA,QAAQ,EAAE,KAAKuC,YAArB;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,SAAS,EAAC,KAA1B;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAkB,cAAA,EAAE,EAAE,EAAtB;AAAA,qCACI,QAAC,IAAD;AAAA,uCACI,QAAC,WAAD;AAAA,0CACI,QAAC,SAAD;AACI,oBAAA,IAAI,EAAC,MADT;AAEI,oBAAA,IAAI,EAAC,MAFT;AAGI,oBAAA,KAAK,EAAC,iBAHV;AAII,oBAAA,SAAS,MAJb;AAKI,oBAAA,IAAI,EAAC,GALT;AAMI,oBAAA,WAAW,EAAC,iBANhB;AAOI,oBAAA,KAAK,EAAEP,MAAM,CAACD,IAAP,GAAc,IAAd,GAAqB,KAPhC;AAQI,oBAAA,UAAU,EAAEC,MAAM,CAACD,IARvB;AASI,oBAAA,SAAS,EAAEkB,OAAO,CAACM,SATvB;AAUI,oBAAA,QAAQ,EAAE,KAAKtB,YAVnB;AAWI,oBAAA,SAAS;AAXb;AAAA;AAAA;AAAA;AAAA,0BADJ,eAcI,QAAC,SAAD;AACI,oBAAA,IAAI,EAAC,UADT;AAEI,oBAAA,IAAI,EAAC,MAFT;AAGI,oBAAA,KAAK,EAAC,UAHV;AAII,oBAAA,SAAS,MAJb;AAKI,oBAAA,IAAI,EAAC,GALT;AAMI,oBAAA,WAAW,EAAC,qBANhB;AAOI,oBAAA,KAAK,EAAED,MAAM,CAACD,IAAP,GAAc,IAAd,GAAqB,KAPhC;AAQI,oBAAA,UAAU,EAAEC,MAAM,CAACD,IARvB;AASI,oBAAA,SAAS,EAAEkB,OAAO,CAACM,SATvB;AAUI,oBAAA,QAAQ,EAAE,KAAKtB,YAVnB;AAWI,oBAAA,SAAS;AAXb;AAAA;AAAA;AAAA;AAAA,0BAdJ,eA2BI,QAAC,SAAD;AACI,oBAAA,IAAI,EAAC,QADT;AAEI,oBAAA,IAAI,EAAC,MAFT;AAGI,oBAAA,KAAK,EAAC,QAHV;AAII,oBAAA,SAAS,MAJb;AAKI,oBAAA,IAAI,EAAC,GALT;AAMI,oBAAA,WAAW,EAAC,mBANhB;AAOI,oBAAA,KAAK,EAAED,MAAM,CAACD,IAAP,GAAc,IAAd,GAAqB,KAPhC;AAQI,oBAAA,UAAU,EAAEC,MAAM,CAACD,IARvB;AASI,oBAAA,SAAS,EAAEkB,OAAO,CAACM,SATvB;AAUI,oBAAA,QAAQ,EAAE,KAAKtB,YAVnB;AAWI,oBAAA,SAAS;AAXb;AAAA;AAAA;AAAA;AAAA,0BA3BJ,eAwCI,QAAC,SAAD;AACI,oBAAA,IAAI,EAAC,aADT;AAEI,oBAAA,IAAI,EAAC,MAFT;AAGI,oBAAA,KAAK,EAAC,aAHV;AAII,oBAAA,SAAS,MAJb;AAKI,oBAAA,IAAI,EAAC,GALT;AAMI,oBAAA,WAAW,EAAC,wBANhB;AAOI,oBAAA,KAAK,EAAED,MAAM,CAACD,IAAP,GAAc,IAAd,GAAqB,KAPhC;AAQI,oBAAA,UAAU,EAAEC,MAAM,CAACD,IARvB;AASI,oBAAA,SAAS,EAAEkB,OAAO,CAACM,SATvB;AAUI,oBAAA,QAAQ,EAAE,KAAKtB,YAVnB;AAWI,oBAAA,SAAS;AAXb;AAAA;AAAA;AAAA;AAAA,0BAxCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eA4DI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAkB,cAAA,EAAE,EAAE,EAAtB;AAAA,qCACI,QAAC,IAAD;AAAA,uCACI,QAAC,WAAD;AAAA,0CACI,QAAC,UAAD;AAAY,oBAAA,EAAE,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,MAAD;AACI,oBAAA,OAAO,EAAC,0BADZ;AAEI,oBAAA,EAAE,EAAC,oBAFP;AAGI,oBAAA,KAAK,EAAEa,GAHX;AAII,oBAAA,QAAQ,EAAE,KAAKb,YAJnB;AAAA,4CAMA,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANA,eAOA,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAPA,eAQA,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BARA,eASA,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BATA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAaI,QAAC,SAAD;AACI,oBAAA,IAAI,EAAC,QADT;AAEI,oBAAA,IAAI,EAAC,MAFT;AAGI,oBAAA,KAAK,EAAC,SAHV;AAII,oBAAA,SAAS,MAJb;AAKI,oBAAA,IAAI,EAAC,GALT;AAMI,oBAAA,WAAW,EAAC,yBANhB;AAOI,oBAAA,KAAK,EAAED,MAAM,CAACD,IAAP,GAAc,IAAd,GAAqB,KAPhC;AAQI,oBAAA,UAAU,EAAEC,MAAM,CAACD,IARvB;AASI,oBAAA,SAAS,EAAEkB,OAAO,CAACM,SATvB;AAUI,oBAAA,QAAQ,EAAE,KAAKtB,YAVnB;AAWI,oBAAA,SAAS;AAXb;AAAA;AAAA;AAAA;AAAA,0BAbJ,eA0BI,QAAC,SAAD;AACI,oBAAA,IAAI,EAAC,MADT;AAEI,oBAAA,IAAI,EAAC,MAFT;AAGI,oBAAA,KAAK,EAAC,MAHV;AAII,oBAAA,SAAS,MAJb;AAKI,oBAAA,IAAI,EAAC,GALT;AAMI,oBAAA,WAAW,EAAC,iBANhB;AAOI,oBAAA,KAAK,EAAED,MAAM,CAACD,IAAP,GAAc,IAAd,GAAqB,KAPhC;AAQI,oBAAA,UAAU,EAAEC,MAAM,CAACD,IARvB;AASI,oBAAA,SAAS,EAAEkB,OAAO,CAACM,SATvB;AAUI,oBAAA,QAAQ,EAAE,KAAKtB,YAVnB;AAWI,oBAAA,SAAS;AAXb;AAAA;AAAA;AAAA;AAAA,0BA1BJ,eAuCI,QAAC,SAAD;AACI,oBAAA,IAAI,EAAC,MADT;AAEI,oBAAA,IAAI,EAAC,MAFT;AAGI,oBAAA,KAAK,EAAC,MAHV;AAII,oBAAA,SAAS,MAJb;AAKI,oBAAA,IAAI,EAAC,GALT;AAMI,oBAAA,WAAW,EAAC,iBANhB;AAOI,oBAAA,KAAK,EAAED,MAAM,CAACD,IAAP,GAAc,IAAd,GAAqB,KAPhC;AAQI,oBAAA,UAAU,EAAEC,MAAM,CAACD,IARvB;AASI,oBAAA,SAAS,EAAEkB,OAAO,CAACM,SATvB;AAUI,oBAAA,QAAQ,EAAE,KAAKtB,YAVnB;AAWI,oBAAA,SAAS;AAXb;AAAA;AAAA;AAAA;AAAA,0BAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBA5DJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAwHI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAC,WAA9B;AAA0C,YAAA,KAAK,EAAC,SAAhD;AACI,YAAA,SAAS,EAAEgB,OAAO,CAACO,YADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAjBR;AAsJA,wBAEI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAA4B,MAAA,SAAS,EAAC,KAAtC;AAA4C,MAAA,UAAU,EAAC,QAAvD;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAEP,OAAO,CAACvB,KAAnC;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,EAAvB;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,KAAK,EAAC,SAA/B;AAAyC,YAAA,SAAS,EAAEuB,OAAO,CAAC1B,UAA5D;AAAA,mCAAwE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAMK+B,QANL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAWH;;AA7MoC;;AAgNzC1B,gBAAgB,CAAC6B,UAAjB,GAA8B;AAC1BR,EAAAA,OAAO,EAAEvD,SAAS,CAACgE,MAAV,CAAiBC,UADA;AAG1BT,EAAAA,IAAI,EAAExD,SAAS,CAACgE,MAAV,CAAiBC,UAHG;AAK1BvD,EAAAA,cAAc,EAAEV,SAAS,CAACkE,IAAV,CAAeD,UALL;AAM1BtD,EAAAA,WAAW,EAAEX,SAAS,CAACkE,IAAV,CAAeD,UANF;AAO1BhB,EAAAA,EAAE,EAAEjD,SAAS,CAACgE,MAAV,CAAiBC;AAPK,CAA9B;;AAUA,MAAME,eAAe,GAAGhC,KAAK,KAAK;AAC9BqB,EAAAA,IAAI,EAAErB,KAAK,CAACqB,IADkB;AAG9BP,EAAAA,EAAE,EAAEd,KAAK,CAACc;AAHoB,CAAL,CAA7B;;AAMA,eAAexC,OAAO,CAAC0D,eAAD,EAAkB;AAACzD,EAAAA,cAAD;AAAiBC,EAAAA;AAAjB,CAAlB,CAAP,CAAwDN,UAAU,CAACkB,MAAD,CAAV,CAAmBW,gBAAnB,CAAxD,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport TournamentDetails from '../components/tournament/TournamentDetails';\r\nimport TournamentMatches from '../components/tournament/TournamentMatches';\r\nimport StaticProfile from '../components/profile/StaticProfile';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Link } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport { postTournament, clearErrors } from '../redux/actions/dataActions';\r\n\r\n// MUI stuffs\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MuiLink from '@material-ui/core/Link';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst styles = {\r\n    image: {\r\n        width: 120,\r\n        objectFit: 'cover',\r\n        maxWidth: '100%',\r\n        borderRadius: '50%'\r\n    },\r\n    typography: {\r\n        flexGrow: 1,\r\n        align: \"center\"\r\n      },\r\n    title: {\r\n        paddingBottom: \"20px\"\r\n    },\r\n\r\n}\r\n\r\nclass createTournament extends Component {\r\n\r\n    state = {\r\n        open: false,\r\n        name: '',\r\n        errors: {}\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.UI.errors){\r\n            this.setState({\r\n                errors: nextProps.UI.errors\r\n            });\r\n        }\r\n        if (!nextProps.UI.errors && !nextProps.UI.loading) {\r\n            this.setState({ name: '', open: false, errors: {} });\r\n        }\r\n    \r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.props.clearErrors();\r\n        this.setState({ [event.target.name]: event.target.value })\r\n    };\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.postTournament({ name: this.state.name });\r\n    };\r\n\r\n    render() {\r\n\r\n        const { errors } = this.state;\r\n        const [age, setAge] = React.useState('');\r\n        const { \r\n            classes, \r\n            user: { \r\n                authenticated\r\n            }\r\n        } = this.props;\r\n\r\n        if(!authenticated){\r\n            console.log(\"AUTH: \" + authenticated)\r\n        }\r\n\r\n        const authText = (\r\n            !authenticated ? (\r\n                <Grid container  justify=\"center\">\r\n                    <Grid item  xs='auto'>\r\n                        <Card >\r\n                            <CardContent>\r\n                                <Typography variant=\"body1\" className={classes.typography}>You have to&nbsp;\r\n                                    <MuiLink component={Link} to={`/login`} variant=\"body1\">\r\n                                         login \r\n                                    </MuiLink> \r\n                                    &nbsp;to create a Tournament!\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            ) : (\r\n                <Grid container direction=\"row\">\r\n                    <Grid item sm={12} xs={12}>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <Grid container direction=\"row\">\r\n                                <Grid item sm={6} xs={12}>\r\n                                    <Card>\r\n                                        <CardContent>\r\n                                            <TextField \r\n                                                name=\"name\" \r\n                                                type=\"text\" \r\n                                                label=\"Tournament name\" \r\n                                                multiline \r\n                                                rows=\"3\" \r\n                                                placeholder=\"tournament name\" \r\n                                                error={errors.name ? true : false} \r\n                                                helperText={errors.name} \r\n                                                className={classes.textField}\r\n                                                onChange={this.handleChange}\r\n                                                fullWidth\r\n                                            />\r\n                                            <TextField \r\n                                                name=\"location\" \r\n                                                type=\"text\" \r\n                                                label=\"Location\" \r\n                                                multiline \r\n                                                rows=\"3\" \r\n                                                placeholder=\"tournament location\" \r\n                                                error={errors.name ? true : false} \r\n                                                helperText={errors.name} \r\n                                                className={classes.textField}\r\n                                                onChange={this.handleChange}\r\n                                                fullWidth\r\n                                            />\r\n                                            <TextField \r\n                                                name=\"format\" \r\n                                                type=\"text\" \r\n                                                label=\"Format\" \r\n                                                multiline \r\n                                                rows=\"3\" \r\n                                                placeholder=\"tournament format\" \r\n                                                error={errors.name ? true : false} \r\n                                                helperText={errors.name} \r\n                                                className={classes.textField}\r\n                                                onChange={this.handleChange}\r\n                                                fullWidth\r\n                                            />\r\n                                            <TextField \r\n                                                name=\"description\" \r\n                                                type=\"text\" \r\n                                                label=\"Description\" \r\n                                                multiline \r\n                                                rows=\"5\" \r\n                                                placeholder=\"tournament description\" \r\n                                                error={errors.name ? true : false} \r\n                                                helperText={errors.name} \r\n                                                className={classes.textField}\r\n                                                onChange={this.handleChange}\r\n                                                fullWidth\r\n                                            />\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                </Grid>\r\n\r\n                                <Grid item sm={6} xs={12}>\r\n                                    <Card>\r\n                                        <CardContent>\r\n                                            <InputLabel id=\"demo-simple-select-label\">Age</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"demo-simple-select-label\"\r\n                                                id=\"demo-simple-select\"\r\n                                                value={age}\r\n                                                onChange={this.handleChange}\r\n                                            >\r\n                                            <MenuItem value={4}>4</MenuItem>\r\n                                            <MenuItem value={8}>8</MenuItem>\r\n                                            <MenuItem value={16}>16</MenuItem>\r\n                                            <MenuItem value={16}>32</MenuItem>\r\n                                            </Select>\r\n                                            <TextField \r\n                                                name=\"teamsN\" \r\n                                                type=\"text\" \r\n                                                label=\"Teams #\" \r\n                                                multiline \r\n                                                rows=\"3\" \r\n                                                placeholder=\"tournament teams number\" \r\n                                                error={errors.name ? true : false} \r\n                                                helperText={errors.name} \r\n                                                className={classes.textField}\r\n                                                onChange={this.handleChange}\r\n                                                fullWidth\r\n                                            />\r\n                                            <TextField \r\n                                                name=\"type\" \r\n                                                type=\"text\" \r\n                                                label=\"Type\" \r\n                                                multiline \r\n                                                rows=\"3\" \r\n                                                placeholder=\"tournament type\" \r\n                                                error={errors.name ? true : false} \r\n                                                helperText={errors.name} \r\n                                                className={classes.textField}\r\n                                                onChange={this.handleChange}\r\n                                                fullWidth\r\n                                            />\r\n                                            <TextField \r\n                                                name=\"date\" \r\n                                                type=\"text\" \r\n                                                label=\"Date\" \r\n                                                multiline \r\n                                                rows=\"3\" \r\n                                                placeholder=\"tournament date\" \r\n                                                error={errors.name ? true : false} \r\n                                                helperText={errors.name} \r\n                                                className={classes.textField}\r\n                                                onChange={this.handleChange}\r\n                                                fullWidth\r\n                                            />\r\n                                            \r\n                                        </CardContent>\r\n                                    </Card>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\"\r\n                                className={classes.submitButton}>\r\n                                    Submit\r\n                            </Button>\r\n                        </form>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        );\r\n        \r\n\r\n        return (\r\n\r\n            <Grid container spacing={0} direction=\"row\" alignItems=\"center\">\r\n                <Grid container className={classes.title}>\r\n                    <Grid item sm={10} xs={12}>\r\n                        <Typography variant=\"h5\" color=\"primary\" className={classes.typography}><b>Create Tournament</b></Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                {authText}\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\ncreateTournament.protoTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n\r\n    user: PropTypes.object.isRequired,\r\n\r\n    postTournament: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n\r\n    UI: state.UI\r\n})\r\n\r\nexport default connect(mapStateToProps, {postTournament, clearErrors})(withStyles(styles)(createTournament));\r\n"]},"metadata":{},"sourceType":"module"}