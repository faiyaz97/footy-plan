{"ast":null,"code":"import { SET_TOURNAMENT, SET_TOURNAMENTS, LOADING_DATA, STOP_LOADING_UI, DELETE_TOURNAMENT, LOADING_UI, CLEAR_ERRORS, SET_ERRORS, POST_TOURNAMENT, SUBMIT_COMMENT, LOADING_USER } from '../types';\nimport axios from 'axios'; // get all tournaments\n\nexport const getTournaments = () => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get('/tournaments').then(res => {\n    dispatch({\n      type: SET_TOURNAMENTS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_TOURNAMENTS,\n      payload: []\n    });\n  });\n}; // get a tournament\n\nexport const getTournament = tournamentId => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.get(`/tournament/${tournamentId}`).then(res => {\n    dispatch({\n      type: SET_TOURNAMENT,\n      payload: res.data\n    });\n    dispatch({\n      type: STOP_LOADING_UI\n    });\n  }).catch(err => console.log(err));\n}; // post a torunament\n\nexport const postTournament = newTournament => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/tournament', newTournament).then(res => {\n    dispatch({\n      type: POST_TOURNAMENT,\n      payload: res.data\n    });\n    dispatch(clearErrors());\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const submitComment = (tournamentId, commentData) => dispatch => {\n  axios.post(`/tournament/${tournamentId}/comment`, commentData).then(res => {\n    dispatch({\n      type: SUBMIT_COMMENT,\n      payload: res.data\n    });\n    dispatch(clearErrors());\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const deleteTournament = tournamentId => dispatch => {\n  axios.delete(`/tournament/${tournamentId}`).then(() => {\n    dispatch({\n      type: DELETE_TOURNAMENT,\n      payload: tournamentId\n    });\n  }).catch(err => console.log(err));\n};\nexport const getUserData = userHandle => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get(`/user/${userHandle}`).then(res => {\n    dispatch({\n      type: SET_TOURNAMENTS,\n      payload: res.data.tournaments\n    });\n  }).catch(() => {\n    dispatch({\n      type: SET_TOURNAMENTS,\n      payload: null\n    });\n  });\n};\nexport const clearErrors = () => dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["C:/Users/Faiyaz/Desktop/ffu/FYP-21/football-tournaments/client-side/src/redux/actions/dataActions.js"],"names":["SET_TOURNAMENT","SET_TOURNAMENTS","LOADING_DATA","STOP_LOADING_UI","DELETE_TOURNAMENT","LOADING_UI","CLEAR_ERRORS","SET_ERRORS","POST_TOURNAMENT","SUBMIT_COMMENT","LOADING_USER","axios","getTournaments","dispatch","type","get","then","res","payload","data","catch","err","getTournament","tournamentId","console","log","postTournament","newTournament","post","clearErrors","response","submitComment","commentData","deleteTournament","delete","getUserData","userHandle","tournaments"],"mappings":"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","sourcesContent":["import { SET_TOURNAMENT, SET_TOURNAMENTS, LOADING_DATA, STOP_LOADING_UI, DELETE_TOURNAMENT, LOADING_UI, CLEAR_ERRORS, SET_ERRORS, POST_TOURNAMENT, SUBMIT_COMMENT, LOADING_USER } from '../types';\r\nimport axios from 'axios';\r\n\r\n// get all tournaments\r\nexport const getTournaments = () => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios\r\n      .get('/tournaments')\r\n      .then((res) => {\r\n        dispatch({\r\n          type: SET_TOURNAMENTS,\r\n          payload: res.data\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: SET_TOURNAMENTS,\r\n          payload: []\r\n        });\r\n      });\r\n  };\r\n\r\n// get a tournament\r\nexport const getTournament = (tournamentId) => (dispatch) => {\r\n  dispatch({ type: LOADING_UI });\r\n  axios\r\n    .get(`/tournament/${tournamentId}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SET_TOURNAMENT,\r\n        payload: res.data\r\n      });\r\n      dispatch({ type: STOP_LOADING_UI });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n  // post a torunament\r\n  export const postTournament = (newTournament) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios\r\n      .post('/tournament', newTournament)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: POST_TOURNAMENT,\r\n          payload: res.data\r\n        });\r\n        dispatch(clearErrors())\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: SET_ERRORS,\r\n          payload: err.response.data\r\n        });\r\n      });\r\n  };\r\n\r\n  export const submitComment = (tournamentId, commentData) => (dispatch) => {\r\n    axios.post(`/tournament/${tournamentId}/comment`, commentData)\r\n      .then(res => {\r\n        dispatch({\r\n          type: SUBMIT_COMMENT,\r\n          payload: res.data\r\n        });\r\n        dispatch(clearErrors())\r\n      })\r\n      .catch(err => {\r\n        dispatch({\r\n          type: SET_ERRORS,\r\n          payload: err.response.data\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  export const deleteTournament = (tournamentId) => (dispatch) => {\r\n    axios.delete(`/tournament/${tournamentId}`)\r\n      .then(() => {\r\n        dispatch({ type: DELETE_TOURNAMENT, payload: tournamentId})\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  export const getUserData = (userHandle) => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios\r\n      .get(`/user/${userHandle}`)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: SET_TOURNAMENTS,\r\n          payload: res.data.tournaments\r\n        });\r\n      })\r\n      .catch(() => {\r\n        dispatch({\r\n          type: SET_TOURNAMENTS,\r\n          payload: null\r\n        });\r\n      });\r\n  };\r\n\r\n  export const clearErrors = () => dispatch => {\r\n    dispatch({ type: CLEAR_ERRORS })\r\n  }"]},"metadata":{},"sourceType":"module"}