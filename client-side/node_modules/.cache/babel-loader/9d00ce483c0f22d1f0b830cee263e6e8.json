{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Faiyaz\\\\Desktop\\\\ffu\\\\FYP-21\\\\football-tournaments\\\\client-side\\\\src\\\\pages\\\\tournament.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport TournamentDetails from '../components/tournament/TournamentDetails';\nimport TournamentMatches from '../components/tournament/TournamentMatches';\nimport StaticProfile from '../components/profile/StaticProfile';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { connect } from 'react-redux';\nimport { getUserData, getTournament } from '../redux/actions/dataActions'; // MUI stuffs\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'; // css style\n\nconst styles = {\n  image: {\n    width: 120,\n    objectFit: 'cover',\n    maxWidth: '100%',\n    borderRadius: '50%'\n  },\n  typography: {\n    flexGrow: 1,\n    align: \"center\"\n  },\n  title: {\n    paddingBottom: \"20px\"\n  }\n};\n\nclass tournament extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profile: null\n    };\n  }\n\n  // invoked immediately after this component is mounted\n  componentDidMount() {\n    // get tournament id\n    const tournamentId = this.props.match.params.tournamentId; // get tournament data\n\n    this.props.getTournament(tournamentId);\n  } // render page\n\n\n  render() {\n    // torunament, classes, page props\n    const {\n      tournament\n    } = this.props.data;\n    const {\n      classes\n    } = this.props;\n    const page = this.props.match.params.page; // display tournament details or matches page\n\n    const pageView = page === \"details\" ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TournamentDetails, {\n          tournament: tournament\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TournamentMatches, {\n          tournament: tournament\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 0,\n      direction: \"row\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.title,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 2,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: tournament.logo,\n            height: true,\n            className: classes.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 10,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            color: \"primary\",\n            className: classes.typography,\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: tournament.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 97\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), pageView]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\ntournament.protoTypes = {\n  getUserData: PropTypes.func.isRequired,\n  getTournament: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps, {\n  getUserData,\n  getTournament\n})(withStyles(styles)(tournament));","map":{"version":3,"sources":["C:/Users/Faiyaz/Desktop/ffu/FYP-21/football-tournaments/client-side/src/pages/tournament.js"],"names":["React","Component","PropTypes","axios","TournamentDetails","TournamentMatches","StaticProfile","withStyles","connect","getUserData","getTournament","Card","CardContent","CardMedia","Typography","Grid","styles","image","width","objectFit","maxWidth","borderRadius","typography","flexGrow","align","title","paddingBottom","tournament","state","profile","componentDidMount","tournamentId","props","match","params","render","data","classes","page","pageView","logo","name","protoTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport TournamentDetails from '../components/tournament/TournamentDetails';\r\nimport TournamentMatches from '../components/tournament/TournamentMatches';\r\nimport StaticProfile from '../components/profile/StaticProfile';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getUserData, getTournament } from '../redux/actions/dataActions';\r\n\r\n// MUI stuffs\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n// css style\r\nconst styles = {\r\n    image: {\r\n        width: 120,\r\n        objectFit: 'cover',\r\n        maxWidth: '100%',\r\n        borderRadius: '50%'\r\n    },\r\n    typography: {\r\n        flexGrow: 1,\r\n        align: \"center\"\r\n      },\r\n    title: {\r\n        paddingBottom: \"20px\"\r\n    }\r\n\r\n}\r\n\r\nclass tournament extends Component {\r\n    // profile object\r\n    state = {\r\n        profile: null\r\n    }\r\n    // invoked immediately after this component is mounted\r\n    componentDidMount(){\r\n        // get tournament id\r\n        const tournamentId = this.props.match.params.tournamentId;\r\n        // get tournament data\r\n        this.props.getTournament(tournamentId);\r\n    }\r\n\r\n    // render page\r\n    render() {\r\n        // torunament, classes, page props\r\n        const { tournament } = this.props.data;\r\n        const { classes } = this.props;\r\n        const page = this.props.match.params.page\r\n\r\n        // display tournament details or matches page\r\n        const pageView = page === \"details\" ? (\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    {/* get TorunamentDetails component */}\r\n                    <TournamentDetails tournament={tournament}/>\r\n                </Grid>  \r\n            </Grid>\r\n        ) : (\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    {/* get TorunamentMatches component */}\r\n                    <TournamentMatches tournament={tournament}/>\r\n                </Grid>  \r\n            </Grid>\r\n        )\r\n        \r\n        return (\r\n            <Grid container spacing={0} direction=\"row\" alignItems=\"center\">\r\n                <Grid container className={classes.title}>\r\n                    <Grid item sm={2} xs={12}>\r\n                        {/* display tournament logo */}\r\n                        <img src={tournament.logo} height className={classes.image}/>\r\n                    </Grid>\r\n                    <Grid item sm={10} xs={12}>\r\n                        {/* display tournament name */}\r\n                        <Typography variant=\"h4\" color=\"primary\" className={classes.typography}><b>{tournament.name}</b></Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                {/* display matches or details page */}\r\n                {pageView}\r\n                \r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\ntournament.protoTypes = {\r\n    getUserData: PropTypes.func.isRequired,\r\n    getTournament: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.data\r\n})\r\n\r\nexport default connect(mapStateToProps, {getUserData, getTournament})(withStyles(styles)(tournament));\r\n"]},"metadata":{},"sourceType":"module"}